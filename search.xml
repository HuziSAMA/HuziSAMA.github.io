<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTTP协议与重要端口及服务</title>
      <link href="/2023/08/04/http-xie-yi/"/>
      <url>/2023/08/04/http-xie-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>HTTP 协议一般指 HTTP（超文本传输协议）。</p><p>超文本传输协议（英语：HyperText Transfer Protocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议，是因特网上应用最为广泛的一种网络传输协议，所有的 WWW 文件都必须遵守这个标准。</p><p>HTTP 是为 Web 浏览器与 Web 服务器之间的通信而设计的，但也可以用于其他目的。</p><p>HTTP 是一个基于 TCP&#x2F;IP 通信协议来传递数据的（HTML 文件、图片文件、查询结果等）。</p><h3 id="HTTP-HTTPS-简介"><a href="#HTTP-HTTPS-简介" class="headerlink" title="HTTP&#x2F;HTTPS 简介"></a>HTTP&#x2F;HTTPS 简介</h3><p>HTTP 协议是 Hyper Text Transfer Protocol（超文本传输协议）的缩写，是用于从万维网（ WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p><p>HTTP 是一个基于 TCP&#x2F;IP 通信协议来传递数据（HTML 文件、图片文件、查询结果等）。</p><p>HTTPS 协议是 HyperText Transfer Protocol Secure（超文本传输安全协议）的缩写，是一种通过计算机网络进行安全通信的传输协议。</p><p>HTTPS 经由 HTTP 进行通信，但利用 SSL&#x2F;TLS 来加密数据包，HTTPS 开发的主要目的，是提供对网站服务器的身份认证，保护交换资料的隐私与完整性。</p><p>HTTP 的 URL 是由 http:&#x2F;&#x2F; 起始与默认使用端口 <strong>80</strong>，而 HTTPS 的 URL 则是由 https:&#x2F;&#x2F; 起始与默认使用端口<strong>443</strong>。</p><hr><h3 id="HTTP-工作原理"><a href="#HTTP-工作原理" class="headerlink" title="HTTP 工作原理"></a>HTTP 工作原理</h3><p>HTTP 协议工作于客户端-服务端架构上。</p><p>浏览器作为 HTTP 客户端通过 URL 向 HTTP 服务端即 WEB 服务器发送所有请求。</p><p>Web 服务器有：Apache 服务器，IIS 服务器（Internet Information Services）等。</p><p>Web 服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP 默认端口号为 80，但是你也可以改为 8080 或者其他端口。</p><p><strong>HTTP 三点注意事项：</strong></p><ul><li>HTTP 是无连接：无连接的含义是限制每次连接只处理一个请求，服务器处理完客户的请求，并收到客户的应答后，即断开连接，采用这种方式可以节省传输时间。</li><li>HTTP 是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送，客户端以及服务器指定使用适合的 MIME-type 内容类型。</li><li>HTTP 是无状态：HTTP 协议是无状态协议，无状态是指协议对于事务处理没有记忆能力，缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大，另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><hr><h3 id="HTTPS-作用"><a href="#HTTPS-作用" class="headerlink" title="HTTPS 作用"></a>HTTPS 作用</h3><p>HTTPS 的主要作用是在不安全的网络上创建一个安全信道，并可在使用适当的加密包和服务器证书可被验证且可被信任时，对窃听和中间人攻击提供合理的防护。</p><p>HTTPS 的信任基于预先安装在操作系统中的证书颁发机构（CA）。</p><p>因此，与一个网站之间的 HTTPS 连线仅在这些情况下可被信任：</p><ul><li>浏览器正确地实现了 HTTPS 且操作系统中安装了正确且受信任的证书颁发机构；</li><li>证书颁发机构仅信任合法的网站；</li><li>被访问的网站提供了一个有效的证书，也就是说它是一个由操作系统信任的证书颁发机构签发的（大部分浏览器会对无效的证书发出警告）；</li><li>该证书正确地验证了被访问的网站（例如，访问 <a href="https://www.runoob.com/">https://www.runoob.com</a> 时收到了签发给 <a href="http://www.runoob.com/">www.runoob.com</a> 而不是其它域名的证书）；</li><li>此协议的加密层（SSL&#x2F;TLS）能够有效地提供认证和高强度的加密。</li></ul><p>Google Chrome、Internet Explorer 和 Firefox 等浏览器在网站含有由加密和未加密内容组成的混合内容时，会发出警告。</p><h3 id="HTTP-消息结构"><a href="#HTTP-消息结构" class="headerlink" title="HTTP 消息结构"></a>HTTP 消息结构</h3><p>HTTP是基于客户端&#x2F;服务端（C&#x2F;S）的架构模型，通过一个可靠的链接来交换信息，是一个无状态的请求&#x2F;响应协议。</p><p>一个HTTP”客户端”是一个应用程序（Web浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个HTTP的请求的目的。</p><p>一个HTTP”服务器”同样也是一个应用程序（通常是一个Web服务，如Apache Web服务器或IIS服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。</p><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。</p><p>一旦建立连接后，数据消息就通过类似Internet邮件所使用的格式[RFC5322]和多用途Internet邮件扩展（MIME）[RFC2045]来传送。</p><hr><h4 id="客户端请求消息"><a href="#客户端请求消息" class="headerlink" title="客户端请求消息"></a>客户端请求消息</h4><p>客户端发送一个HTTP请求到服务器的请求消息包括以下格式：请求行（request line）、请求头部（header）、空行和请求数据四个部分组成。</p><h4 id="服务器响应消息"><a href="#服务器响应消息" class="headerlink" title="服务器响应消息"></a>服务器响应消息</h4><p>HTTP响应也由四个部分组成，分别是：状态行、消息报头、空行和响应正文。</p><h3 id="HTTP-请求方法"><a href="#HTTP-请求方法" class="headerlink" title="HTTP 请求方法"></a>HTTP 请求方法</h3><p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p><p>HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD 方法。</p><p>HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p><table><thead><tr><th>序号</th><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>GET</td><td>请求指定的页面信息，并返回实体主体。</td></tr><tr><td>2</td><td>HEAD</td><td>类似于 GET 请求，只不过返回的响应中没有具体的内容，用于获取报头</td></tr><tr><td>3</td><td>POST</td><td>向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST 请求可能会导致新的资源的建立和&#x2F;或已有资源的修改。</td></tr><tr><td>4</td><td>PUT</td><td>从客户端向服务器传送的数据取代指定的文档的内容。</td></tr><tr><td>5</td><td>DELETE</td><td>请求服务器删除指定的页面。</td></tr><tr><td>6</td><td>CONNECT</td><td>HTTP&#x2F;1.1 协议中预留给能够将连接改为管道方式的代理服务器。</td></tr><tr><td>7</td><td>OPTIONS</td><td>允许客户端查看服务器的性能。</td></tr><tr><td>8</td><td>TRACE</td><td>回显服务器收到的请求，主要用于测试或诊断。</td></tr><tr><td>9</td><td>PATCH</td><td>是对 PUT 方法的补充，用来对已知资源进行局部更新 。</td></tr></tbody></table><h3 id="HTTP-响应头信息"><a href="#HTTP-响应头信息" class="headerlink" title="HTTP 响应头信息"></a>HTTP 响应头信息</h3><p>HTTP请求头提供了关于请求，响应或者其他的发送实体的信息。</p><p>在本章节中我们将具体来介绍HTTP响应头信息。</p><table><thead><tr><th>应答头</th><th>说明</th></tr></thead><tbody><tr><td>Allow</td><td>服务器支持哪些请求方法（如GET、POST等）。</td></tr><tr><td>Content-Encoding</td><td>文档的编码（Encode）方法。只有在解码之后才可以得到Content-Type头指定的内容类型。利用gzip压缩文档能够显著地减少HTML文档的下载时间。Java的GZIPOutputStream可以很方便地进行gzip压缩，但只有Unix上的Netscape和Windows上的IE 4、IE  5才支持它。因此，Servlet应该通过查看Accept-Encoding头（即request.getHeader(“Accept-Encoding”)）检查浏览器是否支持gzip，为支持gzip的浏览器返回经gzip压缩的HTML页面，为其他浏览器返回普通页面。</td></tr><tr><td>Content-Length</td><td>表示内容长度。只有当浏览器使用持久HTTP连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入  ByteArrayOutputStream，完成后查看其大小，然后把该值放入Content-Length头，最后通过byteArrayStream.writeTo(response.getOutputStream()发送内容。</td></tr><tr><td>Content-Type</td><td>表示后面的文档属于什么MIME类型。Servlet默认为text&#x2F;plain，但通常需要显式地指定为text&#x2F;html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。</td></tr><tr><td>Date</td><td>当前的GMT时间。你可以用setDateHeader来设置这个头以避免转换时间格式的麻烦。</td></tr><tr><td>Expires</td><td>应该在什么时候认为文档已经过期，从而不再缓存它？</td></tr><tr><td>Last-Modified</td><td>文档的最后改动时间。客户可以通过If-Modified-Since请求头提供一个日期，该请求将被视为一个条件GET，只有改动时间迟于指定时间的文档才会返回，否则返回一个304（Not Modified）状态。Last-Modified也可用setDateHeader方法来设置。</td></tr><tr><td>Location</td><td>表示客户应当到哪里去提取文档。Location通常不是直接设置的，而是通过HttpServletResponse的sendRedirect方法，该方法同时设置状态代码为302。</td></tr><tr><td>Refresh</td><td>表示浏览器应该在多少时间之后刷新文档，以秒计。除了刷新当前文档之外，你还可以通过setHeader(“Refresh”, “5; URL&#x3D;<a href="http://host/path%22)%E8%AE%A9%E6%B5%8F%E8%A7%88%E5%99%A8%E8%AF%BB%E5%8F%96%E6%8C%87%E5%AE%9A%E7%9A%84%E9%A1%B5%E9%9D%A2%E3%80%82">http://host/path&quot;)让浏览器读取指定的页面。</a>  注意这种功能通常是通过设置HTML页面HEAD区的＜META HTTP-EQUIV&#x3D;”Refresh”  CONTENT&#x3D;”5;URL&#x3D;<a href="http://host/path%22%EF%BC%9E%E5%AE%9E%E7%8E%B0%EF%BC%8C%E8%BF%99%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E6%88%96%E9%87%8D%E5%AE%9A%E5%90%91%E5%AF%B9%E4%BA%8E%E9%82%A3%E4%BA%9B%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8CGI%E6%88%96Servlet%E7%9A%84HTML%E7%BC%96%E5%86%99%E8%80%85%E5%8D%81%E5%88%86%E9%87%8D%E8%A6%81%E3%80%82%E4%BD%86%E6%98%AF%EF%BC%8C%E5%AF%B9%E4%BA%8EServlet%E6%9D%A5%E8%AF%B4%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%AE%BE%E7%BD%AERefresh%E5%A4%B4%E6%9B%B4%E5%8A%A0%E6%96%B9%E4%BE%BF%E3%80%82">http://host/path&quot;＞实现，这是因为，自动刷新或重定向对于那些不能使用CGI或Servlet的HTML编写者十分重要。但是，对于Servlet来说，直接设置Refresh头更加方便。</a>   注意Refresh的意义是”N秒之后刷新本页面或访问指定页面”，而不是”每隔N秒刷新本页面或访问指定页面”。因此，连续刷新要求每次都发送一个Refresh头，而发送204状态代码则可以阻止浏览器继续刷新，不管是使用Refresh头还是＜META HTTP-EQUIV&#x3D;”Refresh” …＞。   注意Refresh头不属于HTTP 1.1正式规范的一部分，而是一个扩展，但Netscape和IE都支持它。</td></tr><tr><td>Server</td><td>服务器名字。Servlet一般不设置这个值，而是由Web服务器自己设置。</td></tr><tr><td>Set-Cookie</td><td>设置和页面关联的Cookie。Servlet不应使用response.setHeader(“Set-Cookie”, …)，而是应使用HttpServletResponse提供的专用方法addCookie。参见下文有关Cookie设置的讨论。</td></tr><tr><td>WWW-Authenticate</td><td>客户应该在Authorization头中提供什么类型的授权信息？在包含401（Unauthorized）状态行的应答中这个头是必需的。例如，response.setHeader(“WWW-Authenticate”, “BASIC realm&#x3D;＼”executives＼””)。  注意Servlet一般不进行这方面的处理，而是让Web服务器的专门机制来控制受密码保护页面的访问（例如.htaccess）。</td></tr></tbody></table><h3 id="HTTP-状态码"><a href="#HTTP-状态码" class="headerlink" title="HTTP 状态码"></a>HTTP 状态码</h3><p>当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含 HTTP 状态码的信息头（server header）用以响应浏览器的请求。</p><p>HTTP 状态码的英文为 <strong>HTTP Status Code</strong>。。</p><p>下面是常见的 HTTP 状态码：</p><ul><li>200 - 请求成功</li><li>301 - 资源（网页等）被永久转移到其它URL</li><li>404 - 请求的资源（网页等）不存在</li><li>500 - 内部服务器错误</li></ul><h4 id="HTTP-状态码分类"><a href="#HTTP-状态码分类" class="headerlink" title="HTTP 状态码分类"></a>HTTP 状态码分类</h4><p>HTTP 状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型。响应分为五类：信息响应(100–199)，成功响应(200–299)，重定向(300–399)，客户端错误(400–499)和服务器错误 (500–599)：</p><table><thead><tr><th>分类</th><th>分类描述</th></tr></thead><tbody><tr><td>1**</td><td>信息，服务器收到请求，需要请求者继续执行操作</td></tr><tr><td>2**</td><td>成功，操作被成功接收并处理</td></tr><tr><td>3**</td><td>重定向，需要进一步的操作以完成请求</td></tr><tr><td>4**</td><td>客户端错误，请求包含语法错误或无法完成请求</td></tr><tr><td>5**</td><td>服务器错误，服务器在处理请求的过程中发生了错误</td></tr></tbody></table><p>HTTP状态码列表:</p><table><thead><tr><th>状态码</th><th>状态码英文名称</th><th>中文描述</th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>继续。客户端应继续其请求</td></tr><tr><td>101</td><td>Switching Protocols</td><td>切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td></td><td></td><td></td></tr><tr><td>200</td><td>OK</td><td>请求成功。一般用于GET与POST请求</td></tr><tr><td>201</td><td>Created</td><td>已创建。成功请求并创建了新的资源</td></tr><tr><td>202</td><td>Accepted</td><td>已接受。已经接受请求，但未处理完成</td></tr><tr><td>203</td><td>Non-Authoritative Information</td><td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td>204</td><td>No Content</td><td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td>205</td><td>Reset Content</td><td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td>206</td><td>Partial Content</td><td>部分内容。服务器成功处理了部分GET请求</td></tr><tr><td></td><td></td><td></td></tr><tr><td>300</td><td>Multiple Choices</td><td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td>302</td><td>Found</td><td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td>303</td><td>See Other</td><td>查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td>304</td><td>Not Modified</td><td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td>305</td><td>Use Proxy</td><td>使用代理。所请求的资源必须通过代理访问</td></tr><tr><td>306</td><td>Unused</td><td>已经被废弃的HTTP状态码</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td></td><td></td><td></td></tr><tr><td>400</td><td>Bad Request</td><td>客户端请求的语法错误，服务器无法理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求要求用户的身份认证</td></tr><tr><td>402</td><td>Payment Required</td><td>保留，将来使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td>404</td><td>Not Found</td><td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端请求中的方法被禁止</td></tr><tr><td>406</td><td>Not Acceptable</td><td>服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td>407</td><td>Proxy Authentication Required</td><td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td>408</td><td>Request Time-out</td><td>服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td>409</td><td>Conflict</td><td>服务器完成客户端的 PUT 请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td>410</td><td>Gone</td><td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td>411</td><td>Length Required</td><td>服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td>412</td><td>Precondition Failed</td><td>客户端请求信息的先决条件错误</td></tr><tr><td>413</td><td>Request Entity Too Large</td><td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td>414</td><td>Request-URI Too Large</td><td>请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td>415</td><td>Unsupported Media Type</td><td>服务器无法处理请求附带的媒体格式</td></tr><tr><td>416</td><td>Requested range not satisfiable</td><td>客户端请求的范围无效</td></tr><tr><td>417</td><td>Expectation Failed</td><td>服务器无法满足Expect的请求头信息</td></tr><tr><td></td><td></td><td></td></tr><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误，无法完成请求</td></tr><tr><td>501</td><td>Not Implemented</td><td>服务器不支持请求的功能，无法完成请求</td></tr><tr><td>502</td><td>Bad Gateway</td><td>作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应</td></tr><tr><td>503</td><td>Service Unavailable</td><td>由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td>504</td><td>Gateway Time-out</td><td>充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td>505</td><td>HTTP Version not supported</td><td>服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table><h2 id="重要端口及服务"><a href="#重要端口及服务" class="headerlink" title="重要端口及服务"></a>重要端口及服务</h2><table><thead><tr><th>port</th><th>service</th><th>description</th></tr></thead><tbody><tr><td>21</td><td>FTP</td><td>FTP控制端口，检查匿名登录、弱口令</td></tr><tr><td>22</td><td>SSH</td><td>SSH远程登录协议，检查弱口令</td></tr><tr><td>23</td><td>Telnet</td><td>Telnet终端仿真协议</td></tr><tr><td>53</td><td>DNS服务</td><td></td></tr><tr><td>80</td><td>Web</td><td>检查常见Web漏洞及管理后台</td></tr><tr><td>111</td><td>NFS</td><td>网络文件系统</td></tr><tr><td>389</td><td>LDAP</td><td>轻型目录访问协议，检查是否存在匿名访问</td></tr><tr><td>443</td><td>OpenSSL</td><td>检查心脏滴血及Web漏洞</td></tr><tr><td>445</td><td>SMB</td><td>检查是否存在MS17-010、MS08-067漏洞</td></tr><tr><td>512</td><td>Rexec</td><td>检查远程shell命令及暴力破解</td></tr><tr><td>873</td><td>Rsync</td><td>检查匿名登录、弱口令</td></tr><tr><td>1433</td><td>SQL Server</td><td>数据库服务</td></tr><tr><td>1521</td><td>Oracle</td><td>数据库服务</td></tr><tr><td>2049</td><td>NFS</td><td>NFS未授权访问</td></tr><tr><td>2181</td><td>Zookeeper</td><td>分布式协调系统</td></tr><tr><td>2375</td><td>Docker Remote</td><td>API未授权访问</td></tr><tr><td>3306</td><td>MySQL</td><td>数据库服务</td></tr><tr><td>3389</td><td>RDP</td><td>远程桌面</td></tr><tr><td>4848</td><td>GlassFish</td><td>未授权访问</td></tr><tr><td>5432</td><td>PostgreSQL</td><td>数据库服务</td></tr><tr><td>5601</td><td>Kibana</td><td>开源分析及可视化平台</td></tr><tr><td>5672</td><td>RabbitMQ</td><td>开源消息队列服务软件</td></tr><tr><td>5900</td><td>VNC</td><td>远程桌面控制软件，检查弱口令</td></tr><tr><td>5984</td><td>CouchDB</td><td>数据库服务</td></tr><tr><td>6379</td><td>Redis</td><td>数据库服务</td></tr><tr><td>7001</td><td>Weblogic</td><td>Weblogic Console默认端口</td></tr><tr><td>8000-9090</td><td>Web</td><td>常见Web端口，运维一般将管理后台开在这些非80端口上</td></tr><tr><td>8080</td><td>Jenkins</td><td></td></tr><tr><td>8080</td><td>Kubernetes Api Server</td><td></td></tr><tr><td>8081</td><td>Apache-Flink</td><td></td></tr><tr><td>8089</td><td>Druid</td><td></td></tr><tr><td>8090</td><td>Confluence</td><td></td></tr><tr><td>8095</td><td>Atlassian Crowd</td><td></td></tr><tr><td>8161</td><td>Active MQ</td><td></td></tr><tr><td>8888</td><td>Jupyter Notebook</td><td></td></tr><tr><td>8983</td><td>Solr</td><td></td></tr><tr><td>9000</td><td>Fast-CGI</td><td>对外访问可直接Get shell</td></tr><tr><td>9060</td><td>Websephere</td><td>管理端口</td></tr><tr><td>9092</td><td>Kafka</td><td>开源流处理平台</td></tr><tr><td>9200</td><td>Elasticsearch(http)</td><td>全文搜索引擎</td></tr><tr><td>9300</td><td>Elasticsearch(tcp)</td><td>全文搜索引擎</td></tr><tr><td>10000</td><td>Virualmin&#x2F;Webmin</td><td>服务器虚拟主机管理系统</td></tr><tr><td>10051</td><td>Zabbix</td><td>监控系统</td></tr><tr><td>11211</td><td>Memcache</td><td>分布式高速缓存系统，检查未授权访问</td></tr><tr><td>20880</td><td>Dubbo</td><td>阿里巴巴开源分布式服务框架</td></tr><tr><td>27017</td><td>MongoDB</td><td>数据库服务</td></tr><tr><td>28017</td><td>MongoDB</td><td>数据库服务（统计页面）</td></tr><tr><td>50030</td><td>Hadoop Hive</td><td></td></tr><tr><td>50070</td><td>Hadoop</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 协议与端口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
            <tag> 端口服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/2023/08/03/xin-xi-shou-ji/"/>
      <url>/2023/08/03/xin-xi-shou-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>信息收集是指通过各种方式获取所需要的信息，以便我们在后续的渗透过程更好的进行。最简单的比如说目标站点的IP、中间件、脚本语言、端口、邮箱等等。我觉得信息收集在渗透测试的过程当中，是最重要的一环，这一环节没做好，没收集到足够多的可利用的信息，很难进行下一步的操作。</p><h2 id="信息收集的方法"><a href="#信息收集的方法" class="headerlink" title="信息收集的方法"></a>信息收集的方法</h2><h3 id="1-查企业信息"><a href="#1-查企业信息" class="headerlink" title="1. 查企业信息"></a>1. 查企业信息</h3><p>使用爱企查，天眼查，企查查，领英对域名所有者（一般是公司）进行查询<br>可以收集到：</p><ol><li>法人</li><li>公司电话信息</li><li>邮箱信息</li><li>地址</li><li>股东信息等等</li></ol><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230729094747957.png" alt="爱企查"></p><h3 id="2-whois信息"><a href="#2-whois信息" class="headerlink" title="2. whois信息"></a>2. whois信息</h3><p>如果要查询域名的IP、所有者等信息的传输协议，就可以用whois</p><p><strong>whois信息可以获取关键注册人的信息，其中包括：</strong></p><blockquote><p>所有者<br>联系电话<br>所有者联系邮箱<br>注册商<br>域名注册时间<br>域名状态<br>域名到期时间<br>DNS服务器等。</p></blockquote><p><strong>可以对其进行</strong></p><blockquote><p>爆破邮箱<br>邮箱反查域名<br>域名劫持<br>社工<br>寻找旁站等</p></blockquote><p><strong>常用的工具有：</strong><br><a href="https://whois.chinaz.com/">域名Whois查询 - 站长之家</a><br><a href="https://whois.cloud.tencent.com/domain">域名信息查询 - 腾讯云</a><br><a href="https://whois.aliyun.com/">阿里云域名信息查询</a><br><a href="https://www.whois.com/whois/">域名信息查询</a></p><h3 id="3-子域名"><a href="#3-子域名" class="headerlink" title="3. 子域名"></a>3. 子域名</h3><ul><li><p>子域名是指二级域名，是一级域名（顶级域名）的下一级，收集的子域名越多，我们测试的目标就越多，渗透的成功率也越大。往往在主站找不到突破口的时候，我们从子域名入手。</p></li><li><p>有许多第三方服务聚合了大量的DNS数据集，可以通过它们来检索给定域名的子域名</p></li></ul><p>（1）VirusTotal：<a href="https://www.virustotal.com/#/home/search">https://www.virustotal.com/#/home/search</a><br>（2）DNSdumpster：<a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a> </p><ul><li>爆破枚举工具</li></ul><p>（1）layer子域名挖掘机<br>（2）subDomainsBrute</p><ul><li>IP段的收集<br>一般IP的话，我们在收集子域名的时候，就大概知道目标网站的IP段了。<br>也可以通过whois命令获取。即通过中国互联网信息中心<a href="https://ipwhois.cnnic.cn/index.jsp">https://ipwhois.cnnic.cn/index.jsp</a> 进行查询：</li></ul><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230729151754688.png" alt="IP段查询"></p><ul><li>Google语法</li></ul><p>可以利用Google和Bing这样的搜索引擎进行搜索查询（site:<a href="http://www.xxx.com)/">www.xxx.com）</a></p><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230729151956889.png" alt="谷歌引擎搜索"></p><h3 id="4-DNS"><a href="#4-DNS" class="headerlink" title="4. DNS"></a>4. DNS</h3><p>通过DNS解析找到IP地址,主要有以下几种方法:<br><strong>（1）ping</strong></p><p><strong>（2）nslookup</strong></p><p>NSLOOKUP是NT、2000中连接DNS服务器，查询域名信息的一个非常有用的命令，可以指定查询的类型，可以查到DNS记录的生存时间还可以指定使用哪个DNS服务器进行解析。在已安装TCP&#x2F;IP协议的电脑上面均可以使用这个命令。主要用来诊断域名系统 (DNS) 基础结构的信息。</p><p>直接查询：<code>nslookup 域名</code></p><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230731150528539.png" alt="nslookup查询"></p><p>查询更具体的信息：<code>slookup -d 域名</code></p><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230731151325344.png" alt="slookup查询"></p><p><strong>（3）dig工具</strong></p><p><code>dig</code> 和 <code>nslookup</code> 之间差异不大，但 <code>dig</code> 更像一个加强版的 <code>nslookup</code>，可以查询到一些由域名服务器管理的信息，这在排查某些问题的时候非常有用。</p><p><strong>（4）dnsenum工具</strong></p><p>dnsenum会自动检测域传送漏洞<br>使用<code>dnsenum -h</code>来查询全部命令</p><p><strong>（5）站长之家</strong></p><p>站长之家官网首页(<a href="http://tool.chinaz.com/">http://tool.chinaz.com</a>)<br> 站长之家DNS查询(<a href="https://tool.chinaz.com/dns/">https://tool.chinaz.com/dns/</a>)</p><p><strong>（6）CDN技术</strong></p><p>很多时候，网站都会开启CDN加速，导致我们查询到的IP不是真实的IP，所以得先查询到真实的IP地址。</p><ul><li><p>可以全网爆破查询真实ip,返回结果有多个，说明启用了CND技术。</p></li><li><p>或者DNS的查询（<a href="https://www.dnsdb.io/zh-cn/search?q=www.aliyun.com%20type:MX">https://www.dnsdb.io/zh-cn/search?q=www.aliyun.com%20type:MX</a> ）</p></li><li><p>绕过CDN寻找真实IP的方法<br>（1）<strong>内部邮箱源：</strong>一般的邮件系统都在内部，没有经过CDN的解析，通过目标网站用户注册或者RSS订阅功能，查看邮件、寻找邮件头中的邮件服务器域名IP，ping 这个邮件服务器的域名， 就可以获得目标的真实IP （注意，必须是目标自己的邮件服务器，第三方或公共邮件服务器是没有用的）。</p><p>（2）<strong>扫描网站测试文件</strong>，如phpinfo 、test 等，从而找到目标的真实IP 。</p><p>（3）<strong>分站域名：</strong>很多网站主站的访问量会比较大，所以主站都是挂CDN 的，但是分站可能没有挂CDN，可以通过ping二级域名获取分站IP，可能会出现分站和主站不是同一个IP但在同一个C段下面的情况，从而能判断出目标的真实IP段。</p><p>（4）<strong>国外访问：</strong>国内的CDN往往只对国内用户的访问加速，而国外的CDN就不一定了。因此，通过国外在线代理网站访问，可能会得到真实的IP。</p><p>（5）<strong>查询历史域名的解析记录：</strong>也许目标很久以前并没有用过CDN，所以可以通过网站<a href="https://www.netcraft.com/">NETC RAFT</a>来观察域名的IP历史记录，也可以大致分析出目标的真实IP段。</p><p>（6）<strong>如果目标网站有自己的App</strong>，可以尝试利用Fiddler或BurpSuite截取App的请求，从里面找到目标的真实IP。</p></li></ul><h3 id="5-网络空间搜索引擎收集敏感信息"><a href="#5-网络空间搜索引擎收集敏感信息" class="headerlink" title="5. 网络空间搜索引擎收集敏感信息"></a>5. 网络空间搜索引擎收集敏感信息</h3><p>网络空间搜索引擎通过全网扫描的方式，将基础数据进行格式化存储，供安全人员按需搜索使用，提升了安全人员的工作效率。</p><p>目前国内外的网络空间搜索引擎有 shodan、zoomeye、fofa</p><h4 id="shodan"><a href="#shodan" class="headerlink" title="shodan"></a>shodan</h4><p><a href="https://www.shodan.io/">Shodan</a> 是目前最为知名的黑客搜索引擎。</p><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230729153346539.png" alt="Shodan搜索引擎"></p><p>简单语法：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">hostname：      # 搜索指定的主机或域名,例如 hostname:"google"port：          # 搜索指定的端口或服务,例如 port:"21"country：       # 搜索指定的国家,例如 country:"CN"city：          # 搜索指定的城市,例如 city:"hunan"org：           # 搜索指定的组织或公司,例如 org:"google"isp：           # 搜索指定的ISP供应商,例如 isp:"China Telecom"product：       # 搜索指定的操作系统/软件/平台,例如 product:"Apache httpd"version：       # 搜索指定的软件版本,例如 version:"1.6.2"geo：           # 搜索指定的地理位置,参数为经纬度,例如 geo:"31.8639, 117.2808"before/after：  # 搜索指定收录时间前后的数据,格式为dd-mm-yy,例如 before:"11-11-15"net：           # 搜索指定的IP地址或子网,例如 net:"210.45.240.0/24"a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ZoomEye"><a href="#ZoomEye" class="headerlink" title="ZoomEye"></a>ZoomEye</h4><p><a href="https://www.zoomeye.org/">ZoomEye</a> 是北京知道创宇公司发布的网络空间侦测引擎</p><p>&#x27A4;ZoomEye 支持公网设备指纹检索和 Web 指纹检索。网站指纹包括应用名、版本、前端框架、后端框架、服务端语言、服务器操作系统、网站容器、内容管理系统和数据库等。设备指纹包括应用名、版本、开放端口、操作系统、服务名、地理位置等。</p><p><img src="https://raw.githubusercontent.com/lebuxishu/image/main/img/image-20230729154002739.png" alt="ZoomEye搜索引擎"></p><p>简单语法：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">app:nginx           # 组件名ver:1.0             # 版本os:windows          # 操作系统country:"China"     # 国家city:"hunan"        # 城市port:80             # 端口hostname:google     # 主机名site:google.com     # 网站域名desc:nmask          # 描述keywords:passwd     # 关键词service:ftp         # 服务类型ip:8.8.8.8          # ip地址cidr:8.8.8.8/24     # ip地址段<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="FOFA"><a href="#FOFA" class="headerlink" title="FOFA"></a>FOFA</h4><p><a href="https://fofa.info/">FOFA</a> 是白帽汇推出的一款网络空间搜索引擎，它通过进行网络空间测绘，能够帮助研究人员或者企业迅速进行网络资产匹配，例如进行漏洞影响范围分析、应用分布统计、应用流行度排名统计等。</p><p>简单语法：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">title="abc"        # 从标题中搜索abc。例：标题中有北京的网站。header="abc"       # 从http头中搜索abc。例：jboss服务器。body="abc"         # 从html正文中搜索abc。例：正文包含Hacked by。domain="qq.com"    # 搜索根域名带有qq.com的网站。例： 根域名是qq.com的网站。host=".gov.cn"     # 从url中搜索.gov.cn,注意搜索要用host作为名称。port="443"         # 查找对应443端口的资产。例： 查找对应443端口的资产。ip="1.1.1.1"       # 从ip中搜索包含1.1.1.1的网站,注意搜索要用ip作为名称。protocol="https"   # 搜索制定协议类型(在开启端口扫描的情况下有效)。例： 查询https协议资产。city="Beijing"     # 搜索指定城市的资产。例： 搜索指定城市的资产。region="Zhejiang"  # 搜索指定行政区的资产。例： 搜索指定行政区的资产。country="CN"       # 搜索指定国家(编码)的资产。例： 搜索指定国家(编码)的资产。cert="google.com"  # 搜索证书(https或者imaps等)中带有google.com的资产。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个平台都有自己的特点和优势，我们可以使用多个平台来补充自己的结果，让搜索的信息更全。</p><h3 id="6-网站信息收集—指纹信息"><a href="#6-网站信息收集—指纹信息" class="headerlink" title="6. 网站信息收集—指纹信息"></a>6. 网站信息收集—指纹信息</h3><p><strong>CMS及Web指纹识别的必要性</strong></p><p><strong>必要性</strong>：在渗透测试中，只有识别出相应的Web容器或者CMS ，才能查找与其相关的漏洞，然后才能进行相应的渗透操作。</p><p><strong>CMS：</strong>内容管理系统是一种位于WEB前端（Web 服务器）和后端办公系统或流程（内容创作、编辑）之间的软件系统。内容的创作人员、编辑人员、发布人员使用内容管理系统来提交、修改、审批、发布内容。</p><ul><li><strong>云悉指纹：</strong><a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a></li><li><strong>36OFinger-P：</strong><a href="https://fp.shuziguanxing.com/#/">https://fp.shuziguanxing.com/#/</a></li><li><strong>潮汐指纹：</strong><a href="http://finger.tidesec.net/">http://finger.tidesec.net/</a></li></ul><h3 id="7-社会工程学"><a href="#7-社会工程学" class="headerlink" title="7. 社会工程学"></a>7. 社会工程学</h3><p>（1）社会工程学在渗透测试中起着不小的作用，利用社会工程学，攻击者可以从一名员工的口中挖掘出本应该是秘密的信息。</p><p>（2）假设攻击者对一家公司进行渗透测试，正在收集目标的真实IP阶段，此时就可以利用收集到的这家公司的某位销售人员的电子邮箱。首先，给这位销售人员发送邮件，假装对某个产品很感兴趣，显然销售人员会回复邮件。这样攻击者就可以通过分析邮件头来收集这家公司的真实IP地址及内部电子邮件服务器的相关信息。</p><p>（3）通过进一步地应用社会工程学，假设现在己经收集了目标人物的邮箱、QQ 、电话号码、姓名，以及域名服务商， 也通过爆破或者撞库的方法获取邮箱的密码，这时就可以冒充目标人物要求客服人员协助重置域管理密码，甚至技术人员会帮着重置密码，从而使攻击者拿下域管理控制台，然后做域劫持。</p><p>（4）除此以外，还可以利用“社工库”查询想要得到的信息，社工库是用社会工程学进行攻击时积累的各方数据的结构化数据库。这个数据库里有大量信息，甚至可以找到每个人的各种行为记录。利用收集到的邮箱，可以在社工库中找到己经泄露的密码，其实还可以通过搜索引擎搜索到社交账号等信息，然后通过利用社交和社会工程学得到的信息构造密码字典，对目标用户的邮箱和OA账号进行爆破或者撞库。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wed安全 </tag>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用命令大全</title>
      <link href="/2023/08/02/liunx-xi-tong-chang-yong-ming-ling/"/>
      <url>/2023/08/02/liunx-xi-tong-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux常用命令大全"><a href="#Linux常用命令大全" class="headerlink" title="Linux常用命令大全"></a>Linux常用命令大全</h1><h2 id="Linux-目录结构"><a href="#Linux-目录结构" class="headerlink" title="Linux 目录结构"></a>Linux 目录结构</h2><table><thead><tr><th align="center">目录</th><th align="center">内容</th></tr></thead><tbody><tr><td align="center"><strong>&#x2F;bin</strong></td><td align="center"><strong>bin是Binary的缩写, 这个目录存放着最经常使用的命令，由系统、系统管理员和用户共享</strong></td></tr><tr><td align="center"><strong>&#x2F;boot</strong></td><td align="center"><strong>这里存放的是启动Linux时使用的一些核心文件，包括一些链接文件以及镜像文件</strong></td></tr><tr><td align="center"><strong>&#x2F;dev</strong></td><td align="center"><strong>dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的</strong></td></tr><tr><td align="center"><strong>&#x2F;etc</strong></td><td align="center"><strong>大多数重要的系统配置文件都在&#x2F;etc目录下，该目录包含的数据类似于Windows控制面板中的数据</strong></td></tr><tr><td align="center"><strong>&#x2F;home</strong></td><td align="center"><strong>普通用户的家目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的</strong></td></tr><tr><td align="center"><strong>&#x2F;lib</strong></td><td align="center"><strong>库文件，包括系统和用户所需要的各种程序的文件</strong></td></tr><tr><td align="center"><strong>&#x2F;lost+found</strong></td><td align="center"><strong>每个分区在其上目录中都有一个lost+found。故障期间保存的文件在这里</strong></td></tr><tr><td align="center"><strong>&#x2F;media</strong></td><td align="center"><strong>linux系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下</strong></td></tr><tr><td align="center"><strong>&#x2F;mnt</strong></td><td align="center"><strong>外部文件系统的标准挂载点，例如CD-ROM(光驱)或数码相机</strong></td></tr><tr><td align="center"><strong>&#x2F;opt</strong></td><td align="center"><strong>通常包含额外的和第三方软件。这是给主机额外安装的大型应用程序所放置的目录</strong></td></tr><tr><td align="center"><strong>&#x2F;proc</strong></td><td align="center"><strong>包含有关系统资源信息的虚拟文件系统。这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件</strong></td></tr><tr><td align="center"><strong>&#x2F;root</strong></td><td align="center"><strong>该目录为系统管理员，也称作超级权限者的用户家目录。注意根目录 &#x2F; 和根用户的主目录 &#x2F;root 之间的区别</strong></td></tr><tr><td align="center"><strong>&#x2F;sbin</strong></td><td align="center"><strong>s就是Super User的意思，这里存放的是系统管理员root使用的系统管理程序</strong></td></tr><tr><td align="center"><strong>&#x2F;tmp</strong></td><td align="center"><strong>系统使用的临时空间，在重新启动时清理，所以不要使用它来保存任何工作!该目录对于所有用户都可以访问，不要把重要文件放置于该目录</strong></td></tr><tr><td align="center"><strong>&#x2F;usr</strong></td><td align="center"><strong>这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似与windows下的program files目录</strong></td></tr><tr><td align="center"><strong>&#x2F;var</strong></td><td align="center"><strong>用户创建的所有可变文件和临时文件的存储空间，如日志文件(一般是&#x2F;var&#x2F;log)、邮件队列、打印假脱机程序区、从Internet下载的文件的临时存储空间，或在刻录CD之前保存它的映像。</strong></td></tr></tbody></table><h2 id="Linux基本命令操作"><a href="#Linux基本命令操作" class="headerlink" title="Linux基本命令操作"></a>Linux基本命令操作</h2><h3 id="目录操作命令-cd、pwd、ls、mkdir、rmdir、du"><a href="#目录操作命令-cd、pwd、ls、mkdir、rmdir、du" class="headerlink" title="目录操作命令 cd、pwd、ls、mkdir、rmdir、du"></a>目录操作命令 cd、pwd、ls、mkdir、rmdir、du</h3><table><thead><tr><th align="center"><strong>cd</strong></th><th><strong>切换到另一个目录</strong></th></tr></thead><tbody><tr><td align="center"><strong>pwd</strong></td><td><strong>打印当前所在目录 (print working directory)</strong></td></tr><tr><td align="center"><strong>ls -l</strong></td><td><strong>列出的文件以长格式输出，一个文件显示一行（可简写为ll）</strong></td></tr><tr><td align="center"><strong>ls -a</strong></td><td><strong>显示以 “.”开头的文件，“.”开头的为隐藏文件，默认不显示</strong></td></tr><tr><td align="center"><strong>ls -d</strong></td><td><strong>显示目录本身而不显示目录下的文件，默认ls 后面的参数如果是目录，则会显示目录下的文件，如：ls &#x2F;root</strong></td></tr><tr><td align="center"><strong>ls -lh</strong></td><td><strong>长格式输出的文件字节数转换为K,M,G的形式方便人来阅读</strong></td></tr><tr><td align="center"><strong>ls -t</strong></td><td><strong>列出的文件按照修改时间的晚和早排序（最近修改的先显示）</strong></td></tr><tr><td align="center"><strong>ls -tr</strong></td><td><strong>列出的文件按照修改时间的早和晚排序（最近修改的后显示）</strong></td></tr><tr><td align="center"><strong>ls -R</strong></td><td><strong>列出当前目录下的所有文件，如果有目录遍历所有目录及其子目录下的文件</strong></td></tr><tr><td align="center"><strong>ll -ah</strong></td><td><strong>列出目录内容</strong></td></tr><tr><td align="center"><strong>mkdir</strong></td><td><strong>创建目录，使用 -p 选项可以级联创建目录</strong></td></tr><tr><td align="center"><strong>rmdir</strong></td><td><strong>删除空目录，必须是空目录，否则用rm -rf filename删除</strong></td></tr><tr><td align="center"><strong>du-s</strong></td><td><strong>只显示所有文件字节数总数</strong></td></tr><tr><td align="center"><strong>du-h</strong></td><td><strong>转换字节数为K、M、G的形式，便于阅读</strong></td></tr><tr><td align="center"><strong>du -sh</strong></td><td><strong>统计目录下每个文件字节数</strong></td></tr></tbody></table><blockquote><p>Linux绝对路径和相对路径</p><p>绝对路径：以根目录“&#x2F;”开始的路径，表示从Linux目录结构的最顶点算起，特点是路径以“&#x2F;”开头</p><p>相对路径：不以根目录“&#x2F;”开始的路径，以当前目录作为起始点，特点是不以“&#x2F;”开头</p><p>每个目录下都有”.”和”..”2个目录：</p><p>一个点“ . ”代表当前目录，写全了“ .&#x2F; ”</p><p>二个点“ .. ”代表上一级目录，写全了“ ..&#x2F; ”</p></blockquote><h3 id="文件操作命令-which、touch、cp、mv、rm、file"><a href="#文件操作命令-which、touch、cp、mv、rm、file" class="headerlink" title="文件操作命令 which、touch、cp、mv、rm、file"></a>文件操作命令 which、touch、cp、mv、rm、file</h3><table><thead><tr><th><strong>which</strong></th><th><strong>which 后面的命令字在磁盘的什么位置<br />例如：which cd、which ls、which date</strong></th></tr></thead><tbody><tr><td><strong>touch</strong></td><td><strong>创建一个空文件，如果文件已经存在修改文件的修改日期</strong><br /><strong>例如：&#x2F;root目录下创建aaa、bbb、ccc三个空文件 touch &#x2F;root&#x2F;aaa &#x2F;root&#x2F;bbb &#x2F;root&#x2F;ccc</strong></td></tr><tr><td><strong>cp</strong></td><td><strong>1、cp 复制文件</strong><br /><strong>例如：复制 &#x2F;root&#x2F;install.log 文件到 &#x2F;tmp<br />cp &#x2F;root&#x2F;install.log  &#x2F;tmp</strong><br /><strong>例如：复制 &#x2F;root&#x2F;install.log 文件到 &#x2F;tmp并改名为 abc.log</strong><br /><strong>cp &#x2F;root&#x2F;install.log  &#x2F;tmp&#x2F;abc.log</strong><br /><strong>2、cp 复制目录</strong><br /><strong>例如：复制整个 &#x2F;root 目录到 &#x2F;tmp</strong><br /><strong>cp  -R &#x2F;root  &#x2F;tmp</strong><br /><strong>例如：复制整个 &#x2F;root 目录到 &#x2F;tmp并改名为 abc</strong><br /><strong>cp -R &#x2F;root  &#x2F;tmp&#x2F;abc</strong></td></tr><tr><td><strong>mv</strong></td><td><strong>1、mv 移动文件或目录</strong><br /><strong>例如：移动 &#x2F;root&#x2F;install.log.bak 文件到 &#x2F;tmp</strong><br /><strong>mv &#x2F;root&#x2F;install.log.bak  &#x2F;tmp</strong><br /><strong>2、mv 给文件或目录改名</strong><br /><strong>例如：给&#x2F;tmp下的root目录改名为root1</strong><br /><strong>mv  &#x2F;tmp&#x2F;root &#x2F;tmp&#x2F;root1</strong></td></tr><tr><td><strong>rm</strong></td><td><strong>1、rm 删除文件</strong><br /><strong>例如：删除&#x2F;root&#x2F;install.log.bak</strong><br /><strong>rm &#x2F;root&#x2F;install.log.bak</strong><br /><strong>2、rm 删除目录 （root用户操作一定要小心）</strong><br /><strong>例如：给&#x2F;tmp下的root1目录</strong><br /><strong>rm -rf &#x2F;tmp&#x2F;root1</strong><br /><strong>常用选项：</strong><br /><strong>-r 级联删除目录下的所有文件</strong><br /><strong>-f 不提示（不用用户键入’y’或’n’进行确认）</strong></td></tr><tr><td><strong>file</strong></td><td><strong>file 查看文件的类型</strong></td></tr></tbody></table><h3 id="查看登录用户命名-who、w"><a href="#查看登录用户命名-who、w" class="headerlink" title="查看登录用户命名 who、w"></a>查看登录用户命名 who、w</h3><table><thead><tr><th><strong>who</strong></th><th><strong>当前用户登录的信息</strong></th></tr></thead><tbody><tr><td><strong>w</strong></td><td><strong>当前用户登录的信息，以什么程序登录的</strong></td></tr></tbody></table><h3 id="文件内容查看命令-cat、tac、more、less、tail、head"><a href="#文件内容查看命令-cat、tac、more、less、tail、head" class="headerlink" title="文件内容查看命令 cat、tac、more、less、tail、head"></a>文件内容查看命令 cat、tac、more、less、tail、head</h3><table><thead><tr><th><strong>cat</strong></th><th><strong>查看文本文件内容，将文本文件内容全部打印到标准输出<br />选项 -n 输出结果带行号</strong></th></tr></thead><tbody><tr><td><strong>tac</strong></td><td><strong>查看文本文件内容，倒序输出<br />按照行号倒序打印文本文件的内容</strong></td></tr><tr><td><strong>more</strong></td><td><strong>分页显示文件内容，例如：more &#x2F;root&#x2F;install.log</strong><br /><strong>默认显示进度百分比</strong><br /><strong>空格往下翻页，b往上翻页，f往下翻页，q退出</strong></td></tr><tr><td><strong>less</strong></td><td><strong>分页显示文件内容，例如：less &#x2F;root&#x2F;install.log</strong><br /><strong>选项 -m 显示进度百分比</strong><br /><strong>可以用“&#x2F;”后跟关键字搜索文件内容</strong><br /><strong>空格往下翻页，b往上翻页，f往下翻页，q退出</strong></td></tr><tr><td><strong>tail</strong></td><td><strong>查看文件尾部10行，例如：tail &#x2F;root&#x2F;install.log</strong><br /><strong>选项-N （N为正整数）可以指定显示末尾N行内容</strong></td></tr><tr><td><strong>head</strong></td><td><strong>查看文件头部10行，例如：head &#x2F;root&#x2F;install.log</strong><br /><strong>选项-N （N为正整数）可以指定显示头部N行内容</strong></td></tr></tbody></table><h3 id="系统管理类命令-shutdown、reboot、lscpu"><a href="#系统管理类命令-shutdown、reboot、lscpu" class="headerlink" title="系统管理类命令 shutdown、reboot、lscpu"></a>系统管理类命令 shutdown、reboot、lscpu</h3><table><thead><tr><th><strong>date</strong></th><th><strong>打印操作系统时钟</strong><br /><strong>date -s 20190101 按照指定日期重新设定日期和时间</strong></th></tr></thead><tbody><tr><td><strong>clock</strong></td><td><strong>打印硬件时钟（主板中依靠纽扣电池保存在芯片中的时钟）</strong><br /><strong>clock -s 按照硬件时钟设置操作系统时钟</strong><br /><strong>clock -w按照操作系统时钟设置硬件时钟</strong></td></tr></tbody></table><h2 id="bash通配符介绍"><a href="#bash通配符介绍" class="headerlink" title="bash通配符介绍"></a>bash通配符介绍</h2><table><thead><tr><th>*****</th><th><strong>匹配任意长度的任意字符</strong></th></tr></thead><tbody><tr><td><strong>?</strong></td><td><strong>匹配任意单个字符</strong></td></tr><tr><td><strong>[]</strong></td><td><strong>匹配指定字符范围内的任意单个字符，简化写法[a-z]不区分大小写</strong></td></tr><tr><td><strong>[[:upper:]]</strong></td><td><strong>大写字母</strong></td></tr><tr><td><strong>[[:lower:]]</strong></td><td><strong>小写字母</strong></td></tr><tr><td><strong>[[:alpha:]]</strong></td><td><strong>大小写所有字母</strong></td></tr><tr><td><strong>[[:digit:]]</strong></td><td><strong>匹配数字，可以写成[0-9]</strong></td></tr><tr><td><strong>[[:alnum:]]</strong></td><td><strong>字母+数字</strong></td></tr><tr><td><strong>[[:space:]]</strong></td><td><strong>空格</strong></td></tr><tr><td><strong>[[:punct:]]</strong></td><td><strong>标点符号 特殊字符</strong></td></tr><tr><td><strong>[^]</strong></td><td><strong>匹配指定字符范围外的任意单个字符</strong></td></tr></tbody></table><blockquote><p><strong>列出a开头的所有文件</strong></p><p><strong>ls a</strong>*</p></blockquote><blockquote><p><strong>列出a开头一共3个字母的文件</strong></p><p><strong>ls a??</strong></p></blockquote><blockquote><p><strong>列出三个大写字母文件名的文件</strong></p><p><strong>ls [[:upper:]][[:upper:]][[:upper:]]</strong></p></blockquote><blockquote><p><strong>列出一个字母后跟三个数字的文件</strong></p><p><strong>ls [a-z][0-9][0-9][0-9]</strong></p></blockquote><blockquote><p><strong>列出不以a字母开头后跟三个数字的文件</strong></p><p><strong>ls [^a][0-9][0-9][0-9]</strong></p></blockquote><p><strong>拓展：Bash中的组合键</strong></p><table><thead><tr><th><strong>键或组合键</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td><strong>Ctrl+A</strong></td><td><strong>将光标移动到命令行开头</strong></td></tr><tr><td><strong>Ctrl+C</strong></td><td><strong>结束正在运行的程序并返回提示符</strong></td></tr><tr><td><strong>Ctrl+D</strong></td><td><strong>退出当前shell会话，相当于键入exit或logout</strong></td></tr><tr><td><strong>Ctrl+E</strong></td><td><strong>将光标移动到命令行末尾</strong></td></tr><tr><td><strong>Ctrl+H</strong></td><td><strong>Generate backspace character</strong></td></tr><tr><td><strong>Ctrl+L</strong></td><td><strong>Clear this terminal</strong></td></tr><tr><td><strong>Ctrl+R</strong></td><td><strong>查询命令历史记录</strong></td></tr><tr><td><strong>Ctrl+Z</strong></td><td><strong>暂停一个程序</strong></td></tr><tr><td><strong>ArrowLeft and ArrowRight</strong></td><td><strong>将光标在命令行上向左或向右移动一个位置，这样就可以在其他位置插入字符，而不仅仅是在开头和结尾</strong></td></tr><tr><td><strong>ArrowUp and ArrowDown</strong></td><td><strong>浏览历史。转到要重复的行，如果需要编辑详细信息，按Enter键以节省时间</strong></td></tr><tr><td><strong>Shift+PageUp and Shift+PageDown</strong></td><td><strong>浏览终端缓冲区(查看已“滚屏”的文本)</strong></td></tr><tr><td><strong>Tab</strong></td><td><strong>命令或文件名补全;当有多种选择时，系统会发出声音或视觉铃声，如果选择太多，则会询问你是否都想看</strong></td></tr><tr><td><strong>Tab Tab</strong></td><td><strong>显示文件或命令补全的可能性</strong></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> liunx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOS系统常用命令</title>
      <link href="/2023/08/01/dos-xi-tong-chang-yong-ming-ling/"/>
      <url>/2023/08/01/dos-xi-tong-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="常用Dos命令"><a href="#常用Dos命令" class="headerlink" title="常用Dos命令"></a>常用Dos命令</h1><h2 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h2><blockquote><p>CHCP 65001  &#x2F;&#x2F;修改字体编码为UTF-8</p><p>systeminfo  &#x2F;&#x2F;查看系统信息</p><p>hostname  &#x2F;&#x2F;查看主机名</p><p>SET  &#x2F;&#x2F;查看环境变量</p><p>color  &#x2F;&#x2F;改变cmd颜色</p><p>cls  &#x2F;&#x2F;清除屏幕</p><p>runas &#x2F;user:administrator cmd  &#x2F;&#x2F;切换管理员</p></blockquote><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><blockquote><p>ipconfig &#x2F;all  &#x2F;&#x2F;显示完整网络信息</p><p>ping -t -l 65500 ip  &#x2F;&#x2F;死亡之ping</p><p>ipconfig &#x2F;release  &#x2F;&#x2F;释放ip</p><p>ipconfig &#x2F;renew  &#x2F;&#x2F;重新获得ip</p><p>ipconfig &#x2F;flushdns  &#x2F;&#x2F;刷新DNS缓存</p><p>ipconfig &#x2F;displaydns  &#x2F;&#x2F;显示DNS解析程序缓存的内容</p><p>route print  &#x2F;&#x2F;打印路由信息</p><p>arp -a  &#x2F;&#x2F;查看arp缓存</p><p>net view  &#x2F;&#x2F;查看局域网内其他计算机名称</p><p>netsh firewall show state  &#x2F;&#x2F;防火墙状态</p><p>netsh firewall show config  &#x2F;&#x2F;防火墙规则</p></blockquote><h2 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h2><blockquote><p>net config workstation  &#x2F;&#x2F;查看当前登陆用户</p><p>whoami  &#x2F;&#x2F;查看我是哪个用户</p><p>net user  &#x2F;&#x2F;查看有哪些用户</p><p>net user supermage  &#x2F;&#x2F;查看用户supermage的信息</p><p>net localgroup  &#x2F;&#x2F;查看组</p><p>net localgroup administrators  &#x2F;&#x2F;查看组administrators的信息</p><p>net user hack 123 &#x2F;add  &#x2F;&#x2F;新建一个用户hack，密码为123</p><p>net user hack$ 123 &#x2F;add  &#x2F;&#x2F;新建一个隐藏hack用户，密码为123</p><p>net user hack &#x2F;del  &#x2F;&#x2F;删除用户hack</p><p>net localgroup administrators hack &#x2F;add  &#x2F;&#x2F;将普通用户hack提权到管理员</p><p>net user guest &#x2F;active:yes  &#x2F;&#x2F;激活guest用户</p><p>net user guest &#x2F;active:no  &#x2F;&#x2F;关闭guest用户</p><p>net password  &#x2F;&#x2F;密码 更改系统当前登录用户密码</p><p>net user guest  &#x2F;&#x2F;密码 更改guest用户密码</p></blockquote><h2 id="端口进程服务"><a href="#端口进程服务" class="headerlink" title="端口进程服务"></a>端口进程服务</h2><blockquote><p>tasklist 查看进程</p><p>tasklist &#x2F;svc  &#x2F;&#x2F;查看进程，显示进程使用者名称</p><p>netstat -ano  &#x2F;&#x2F;查看系统开放端口</p><p>netstat -ano|findstr 80  &#x2F;&#x2F;查看80端口对应的PID</p><p>tasklist | findstr 80  &#x2F;&#x2F;查看80端口对应的进程</p><p>taskkill &#x2F;f &#x2F;t &#x2F;im xx.exe  &#x2F;&#x2F;杀死xx.exe进程</p><p>taskkill &#x2F;F -pid 520  &#x2F;&#x2F;杀死pid为520的进程</p><p>net start  &#x2F;&#x2F;查看开启了哪些服务</p><p>net start telnet  &#x2F;&#x2F;开启telnet服务</p><p>net stop telnet  &#x2F;&#x2F;停止 telnet服务</p><p>start <a href="http://www.baidu.com/">www.baidu.com</a>  &#x2F;&#x2F;打开网址</p></blockquote><h2 id="共享"><a href="#共享" class="headerlink" title="共享"></a>共享</h2><blockquote><p>net use  &#x2F;&#x2F;查看连接</p><p>net share  &#x2F;&#x2F;查看本地开启的共享</p><p>net share ipc$  &#x2F;&#x2F;开启ipc$共享</p><p>net share ipc$ &#x2F;del  &#x2F;&#x2F;删除ipc$共享</p><p>net share c$ &#x2F;del  &#x2F;&#x2F;删除C盘共享</p><p>net use \192.168.10.15\ipc$ &#x2F;u:”” “”   &#x2F;&#x2F;与192.168.10.15建立ipc空连接</p><p>net use \192.168.10.15 &#x2F;u:”” “”   &#x2F;&#x2F;与192.168.10.15建立ipc空连接，可以吧ipc$去</p><p>掉</p><p>net use \192.168.10.15 &#x2F;u:”administrator” “root”   &#x2F;&#x2F;以administrator身份与192.168.10.15建立ipc连接</p><p>net use \192.168.10.15 &#x2F;del   &#x2F;&#x2F;删除ipc连接</p><p>net use \192.168.10.15\c$ &#x2F;u:”administrator” “root”  &#x2F;&#x2F;建立C盘共享</p><p>dir \192.168.10.15\c$  &#x2F;&#x2F;查看192.168.10.15C盘文件</p><p>dir \192.168.10.15\c$\user  &#x2F;&#x2F;查看192.168.10.15C盘文件下的user目录</p><p>dir \192.168.10.15\c$\user\test.exe  &#x2F;&#x2F;查看192.168.10.15C盘文件下的user目录下的test.exe文件</p><p>net use \192.168.10.15\c$ &#x2F;del  &#x2F;&#x2F;删除该C盘共享连接</p><p>net use k: \192.168.10.15\c$ &#x2F;u:”administrator” “root”  &#x2F;&#x2F;将目标C盘映射到本地K盘</p><p>net use k: &#x2F;del  &#x2F;&#x2F;删除该映射</p></blockquote><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><blockquote><p>echo hello,word &gt; 1.txt  &#x2F;&#x2F;向1.txt中写入 hello,word</p><p>echo hello,word &gt;&gt;1.txt  &#x2F;&#x2F;向1.txt中追加 hello,word</p><p>del  &#x2F;&#x2F;删除一个文件</p><p>deltree  &#x2F;&#x2F;删除文件夹和它下面的所有子文件夹还有文件</p><p>ren 1.txt 2.txt  &#x2F;&#x2F;将 1.txt 重命名为 2.txt</p><p>type 1.txt  &#x2F;&#x2F;查看1.txt文件的内容</p><p>md  &#x2F;&#x2F;创建一个文件夹</p><p>rd  &#x2F;&#x2F;删除一个文件夹</p><p>move 1.txt d:&#x2F;  &#x2F;&#x2F;将1.txt文件移动到d盘下</p><p>123.txt edit  &#x2F;&#x2F;打开123.txt文件(可编辑)</p><p>dir c:\  &#x2F;&#x2F;查看C盘下的文件</p><p>dir c:\ &#x2F;A  &#x2F;&#x2F;查看C盘下的所有文件，包括隐藏文件</p><p>dir c:\ &#x2F;S  &#x2F;&#x2F;查看C盘下和其子文件夹下的文件</p><p>dir c:\ &#x2F;B  &#x2F;&#x2F;只显示C盘下的文件名</p><p>shutdown -s -t 60 -c “你的电脑被黑了” -s关机 -r重启 -a取消</p><p>reg save hklm\sam sam.hive</p><p>reg save hklm\system system.hive</p><p>&#x2F;&#x2F;这两个文件是windows的用户账户数据库，所有用户的登录名以及口令等相关信息都会保存在文件中，这两条命令是获取windows管理员的hash值</p></blockquote><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><blockquote><p>eventvwr</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> DOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown的使用说明</title>
      <link href="/2023/07/31/markdown-de-shi-yong-shuo-ming/"/>
      <url>/2023/07/31/markdown-de-shi-yong-shuo-ming/</url>
      
        <content type="html"><![CDATA[<h1 id="markdown的使用说明"><a href="#markdown的使用说明" class="headerlink" title="markdown的使用说明"></a>markdown的使用说明</h1><p><a href="https://pan.baidu.com/s/1VOVNDknjpmmGjkBqaeAz_A">typora百度网盘下载地址</a> 提取码：6ybf</p><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><blockquote><p>语法：# (一级标题)  ## (二级标题)  ### (三级标题) ……</p></blockquote><blockquote><p>代码：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">># 这是一级标题>## 这是二级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:  </p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2></blockquote><blockquote><p>快捷键:</p><ul><li>Ctrl+数字1~6可以快速将选中的文本调成对应级别的标题</li><li>Ctrl+0可以快速将选中的文本调成普通文本</li><li>Ctrl+加号&#x2F;减号对标题级别进行加减</li></ul></blockquote><h2 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h2><h3 id="1、换行"><a href="#1、换行" class="headerlink" title="1、换行"></a>1、换行</h3><blockquote><p>代码:  </p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>这是一个段落>这是一个段落<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果: </p><p>这是一个段落<br>这是一个段落</p></blockquote><h3 id="2、分割线"><a href="#2、分割线" class="headerlink" title="2、分割线"></a>2、分割线</h3><blockquote><p>语法:  —或者***+回车</p></blockquote><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>---或者***<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:</p><hr></blockquote><h2 id="三、文字显示"><a href="#三、文字显示" class="headerlink" title="三、文字显示"></a>三、文字显示</h2><h3 id="1、字体"><a href="#1、字体" class="headerlink" title="1、字体"></a>1、字体</h3><blockquote><p>语法:</p><ul><li>粗体:  用一对双星号包裹</li><li>删除线:  用一对双飘号包裹</li><li>下划线:  用一对u标签包裹</li><li>斜体:  用一对单星号包裹</li><li>高亮:  用一对双等号包裹</li></ul></blockquote><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>**这是粗体**>~~这是删除线~~>&lt;u>这是下划线&lt;/u>>*这是斜体*>==这是高亮==<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br><strong>这是粗体</strong><br><del>这是删除线</del><br><u>这是下划线</u><br><em>这是斜体</em><br>&#x3D;&#x3D;这是高亮&#x3D;&#x3D;</p></blockquote><blockquote><p>快捷键:</p><ul><li>加粗:  Ctrl+B</li><li>删除线:  Shift+Alt+5</li><li>下划线:  Ctrl+U</li><li>斜体:  Ctrl+I</li></ul></blockquote><h3 id="2、上下标"><a href="#2、上下标" class="headerlink" title="2、上下标"></a>2、上下标</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>x^2^>H~2~O<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>x^2^<br>H<del>2</del>O</p></blockquote><h2 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h2><h3 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>*/-/+ +空格<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>1.只有同一级别:</p><ul><li>苹果</li><li>香蕉</li><li>橘子</li></ul><p>2.子集类:</p><ul><li>一级分类<ul><li>二级分类 <ul><li>三级分类</li></ul></li></ul></li></ul></blockquote><blockquote><p>快捷键:  Ctrl+Shift+]</p></blockquote><h3 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>数字+.+空格<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:</p><ol><li>第一个标题</li><li>第二个标题</li><li>第三个标题</li></ol><ul><li>子内容1</li><li>子内容2</li></ul><ol start="4"><li>第四个标题</li></ol></blockquote><blockquote><p>快捷键:  Ctrl+Shift+[</p></blockquote><h3 id="3、任务列表"><a href="#3、任务列表" class="headerlink" title="3、任务列表"></a>3、任务列表</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>- [ ] 吃早餐>- [x] 背单词<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:</p><ul><li><input disabled="" type="checkbox"> 吃早餐</li><li><input checked="" disabled="" type="checkbox"> 背单词</li></ul></blockquote><h2 id="五、区块显示"><a href="#五、区块显示" class="headerlink" title="五、区块显示"></a>五、区块显示</h2><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>>+回车<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:</p><blockquote><p>这是最外层区块</p><blockquote><p>这是内层区块</p></blockquote></blockquote><blockquote><blockquote><blockquote><p>这是最内层区块</p></blockquote></blockquote></blockquote></blockquote><h2 id="六、代码显示"><a href="#六、代码显示" class="headerlink" title="六、代码显示"></a>六、代码显示</h2><h3 id="1、行内代码"><a href="#1、行内代码" class="headerlink" title="1、行内代码"></a>1、行内代码</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>`int a=0;`（说明：`位于Esc下面）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br><code>int a=0;</code></p></blockquote><blockquote><p>快捷键:  Ctrl+Shift+&#96;</p></blockquote><h3 id="2、代码块"><a href="#2、代码块" class="headerlink" title="2、代码块"></a>2、代码块</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>​```js/java/c#/text>内容>```<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&gt;快捷键:  Ctrl+Shift+K## 七、链接&gt;代码:&gt;&#96;&#96;&#96;text&gt;www.baidu.com&gt;[百度一下](https:&#x2F;&#x2F;www.baidu.com)&gt;[百度一下](https:&#x2F;&#x2F;www.baidu.com &quot;https:&#x2F;&#x2F;www.baidu.com&quot;)&gt;&#96;&#96;&#96;&gt;效果:&gt;www.baidu.com&gt;[百度一下](https:&#x2F;&#x2F;www.baidu.com)&gt;[百度一下](https:&#x2F;&#x2F;www.baidu.com &quot;https:&#x2F;&#x2F;www.baidu.com&quot;)&gt;快捷键:  Ctrl+K## 八、脚注&gt;说明:  对文本进行解释说明。&gt;代码: &gt;&#96;&#96;&#96;text&gt;[^文本]&gt;[^文本]:解释说明&gt;&#96;&#96;&#96;&gt;效果:&gt;这是一个技术[^①]&gt;[^①]: 这是一个非常好用的框架。## 九、图片插入&gt;代码:&gt;&#96;&#96;&#96;text&gt;![不显示的文字](图片路径 &quot;图片标题&quot;)&gt;&#96;&#96;&#96;&gt;效果:&gt;![This is a picture](C:\Users\asus\Pictures\Saved Pictures\Snipaste_2020-09-03_13-19-11.png &quot;漫步图&quot;)&gt;(注：效果路径为C:\Users\asus\Pictures\Saved Pictures\Snipaste_2020-09-03_13-19-11.png。在其他电脑上可能不显示。)&gt;快捷键:  Ctrl+Shift+I## 十、表格&gt;代码:&gt;&#96;&#96;&#96;text&gt;|  1   |  2   |  3   |&gt;| :--- | :--: | ---: |&gt;|  4   |  5   |  6   |&gt;|  7   |  8   |  9   |&gt;|  10  |  11  |  12  |&gt;&#96;&#96;&#96;&gt;效果:&gt;| 1    |  2   |    3 |&gt;| ---- | :--: | ---: |&gt;| 4    |  5   |    6 |&gt;| 7    |  8   |    9 |&gt;| 10   |  11  |   12 |&gt;快捷键:  Ctrl+T## 十一、流程图### 1、横向流程图代码:&#96;&#96;&#96;&#96;text​&#96;&#96;&#96;mermaidgraph LRA[方形]&#x3D;&#x3D;&gt;B(圆角)B&#x3D;&#x3D;&gt;C&#123;条件a&#125;C--&gt;|a&#x3D;1|D[结果1]C--&gt;|a&#x3D;2|E[结果2]F[横向流程图]&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&gt;效果:&gt;&#96;&#96;&#96;mermaid&gt;graph LR&gt;A[方形]&#x3D;&#x3D;&gt;B(圆角)&gt;B&#x3D;&#x3D;&gt;C&#123;条件a&#125;&gt;C--&gt;|a&#x3D;1|D[结果1]&gt;C--&gt;|a&#x3D;2|E[结果2]&gt;F[横向流程图]&gt;&#96;&#96;&#96;### 2、竖向流程图代码:&#96;&#96;&#96;&#96;text​&#96;&#96;&#96;mermaidgraph TDA[方形]&#x3D;&#x3D;&gt;B(圆角)B&#x3D;&#x3D;&gt;C&#123;条件a&#125;C--&gt;|a&#x3D;1|D[结果1]C--&gt;|a&#x3D;2|E[结果2]F[竖向流程图]&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre><code></code></pre></blockquote><blockquote><p>效果:</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">&gt;graph TD&gt;A[方形]&#x3D;&#x3D;&gt;B(圆角)&gt;B&#x3D;&#x3D;&gt;C&#123;条件a&#125;&gt;C--&gt;|a&#x3D;1|D[结果1]&gt;C--&gt;|a&#x3D;2|E[结果2]&gt;F[竖向流程图]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="十二、表情符号"><a href="#十二、表情符号" class="headerlink" title="十二、表情符号"></a>十二、表情符号</h2><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>:happy:、:cry:、:man:<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>:happy:、 :cry:、 :man:</p></blockquote><h2 id="十三、数学公式的输入"><a href="#十三、数学公式的输入" class="headerlink" title="十三、数学公式的输入"></a>十三、数学公式的输入</h2><h3 id="1、公式的插入"><a href="#1、公式的插入" class="headerlink" title="1、公式的插入"></a>1、公式的插入</h3><h4 id="①行中公式"><a href="#①行中公式" class="headerlink" title="①行中公式"></a>①行中公式</h4><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$公式$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$公式$</p></blockquote><h4 id="②独立公式"><a href="#②独立公式" class="headerlink" title="②独立公式"></a>②独立公式</h4><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$$>公式>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$$<br>公式<br>$$</p></blockquote><h3 id="2、上下标-1"><a href="#2、上下标-1" class="headerlink" title="2、上下标"></a>2、上下标</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$x^&#123;y^z&#125;=(1+e^x)^&#123;-2xy^w&#125;$>$\sideset&#123;^1_2&#125;&#123;^3_4&#125;&#123;\underset&#123;6&#125;\bigotimes&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$x^{y^z}&#x3D;(1+e^x)^{-2xy^w}$<br>$\sideset{^1_2}{^3_4}{\underset{6}\bigotimes}$</p></blockquote><h3 id="3、括号和分隔符"><a href="#3、括号和分隔符" class="headerlink" title="3、括号和分隔符"></a>3、括号和分隔符</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\langle\quad\rangle\quad\lceil\quad\rceil\quad\lfloor\quad\rfloor\quad\lbrace\quad\rbrace\quad\lVert\quad\rVert$>$f(x,y,z)=3y^2z\left(3+\dfrac&#123;7x+5&#125;&#123;1+y^2&#125;\right)$>$\left.\dfrac&#123;\mathrm&#123;d&#125;u&#125;&#123;\mathrm&#123;d&#125;x&#125;\right|_&#123;x=0&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\langle\quad\rangle\quad\lceil\quad\rceil\quad\lfloor\quad\rfloor\quad\lbrace\quad\rbrace\quad\lVert\quad\rVert$<br>$f(x,y,z)&#x3D;3y^2z\left(3+\dfrac{7x+5}{1+y^2}\right)$<br>$\left.\dfrac{\mathrm{d}u}{\mathrm{d}x}\right|_{x&#x3D;0}$</p></blockquote><h3 id="4、分数"><a href="#4、分数" class="headerlink" title="4、分数"></a>4、分数</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\frac&#123;a&#125;&#123;b&#125;\quad\dfrac&#123;a&#125;&#123;b&#125;\quad &#123;a\over b&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\frac{a}{b}\quad\dfrac{a}{b}\quad {a\over b}$</p></blockquote><h3 id="5、开方"><a href="#5、开方" class="headerlink" title="5、开方"></a>5、开方</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\sqrt[根指数,省略时为2]&#123;被开方数&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\sqrt{2}\quad\sqrt[3]{2}$</p></blockquote><h3 id="6、省略号"><a href="#6、省略号" class="headerlink" title="6、省略号"></a>6、省略号</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\cdots\quad\ldots\quad\vdots\quad\ddots$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\cdots\quad\ldots\quad\vdots\quad\ddots$</p></blockquote><h3 id="7、矢量和均值"><a href="#7、矢量和均值" class="headerlink" title="7、矢量和均值"></a>7、矢量和均值</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\overrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overleftarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overleftrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underleftarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\underleftrightarrow&#123;E(\vec&#123;r&#125;)&#125;\quad\overline&#123;v&#125;=\bar&#123;v&#125;\quad\underline&#123;v&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\overrightarrow{E(\vec{r})}\quad\overleftarrow{E(\vec{r})}\quad\overleftrightarrow{E(\vec{r})}\quad\underrightarrow{E(\vec{r})}\quad\underleftarrow{E(\vec{r})}\quad\underleftrightarrow{E(\vec{r})}\quad\overline{v}&#x3D;\bar{v}\quad\underline{v}$</p></blockquote><h3 id="8、积分"><a href="#8、积分" class="headerlink" title="8、积分"></a>8、积分</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$$>\iint\limits_D\left(\dfrac&#123;\partial Q&#125;&#123;\partial x&#125;-\dfrac&#123;\partial P&#125;&#123;\partial y&#125;\right)&#123;\rm d&#125;x&#123;\rm d&#125;y=\oint\limits_LP&#123;\rm d&#125;x+Q&#123;\rm d&#125;y>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$$<br>\iint\limits_D\left(\dfrac{\partial Q}{\partial x}-\dfrac{\partial P}{\partial y}\right){\rm d}x{\rm d}y&#x3D;\oint\limits_LP{\rm d}x+Q{\rm d}y<br>$$</p></blockquote><h3 id="9、极限"><a href="#9、极限" class="headerlink" title="9、极限"></a>9、极限</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\lim\limits_&#123;n\to\infin&#125;(1+\dfrac&#123;1&#125;&#123;n&#125;)^n=e$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\lim\limits_{n\to\infin}(1+\dfrac{1}{n})^n&#x3D;e$</p></blockquote><h3 id="10、累加、累乘及交集、并集"><a href="#10、累加、累乘及交集、并集" class="headerlink" title="10、累加、累乘及交集、并集"></a>10、累加、累乘及交集、并集</h3><blockquote><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\sum\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\prod\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\bigcup\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;\quad and\quad\bigcap\limits_&#123;i=1&#125;^n\dfrac&#123;1&#125;&#123;n^2&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$\sum\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\prod\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\bigcup\limits_{i&#x3D;1}^n\dfrac{1}{n^2}\quad and\quad\bigcap\limits_{i&#x3D;1}^n\dfrac{1}{n^2}$</p></blockquote><h3 id="11、希腊字母"><a href="#11、希腊字母" class="headerlink" title="11、希腊字母"></a>11、希腊字母</h3><table><thead><tr><th>语法</th><th>字母</th><th>语法</th><th>字母</th><th>语法</th><th>字母</th></tr></thead><tbody><tr><td>\Alpha(\alpha)</td><td>$\Alpha(\alpha)$</td><td>\Beta(\beta)</td><td>$\Beta(\beta)$</td><td>\Gamma(\gamma)</td><td>$\Gamma(\gamma)$</td></tr><tr><td>\Epsilon(\epsilon)\varepsilon</td><td>$\Epsilon(\epsilon)\varepsilon$</td><td>\Zeta(\zeta)</td><td>$\Zeta(\zeta)$</td><td>\Eta(\eta)</td><td>$\Eta(\eta)$</td></tr><tr><td>\Iota(\iota)</td><td>$\Iota(\iota)$</td><td>\Kappa(\kappa)\varkappa</td><td>$\Kappa(\kappa)\varkappa$</td><td>\Lambda(\lambda)</td><td>$\Lambda(\lambda)$</td></tr><tr><td>\Nu(\nu)</td><td>$\Nu(\nu)$</td><td>\Xi(\xi)</td><td>$\Xi(\xi)$</td><td>\Omicron(\omicron)</td><td>$\Omicron(\omicron)$</td></tr><tr><td>\Rho(\rho)\varrho</td><td>$\Rho(\rho)\varrho$</td><td>\Sigma(\sigma)\varsigma</td><td>$\Sigma(\sigma)\varsigma$</td><td>\Tau(\tau)</td><td>$\Tau(\tau)$</td></tr><tr><td>\Phi(\phi)\varphi</td><td>$\Phi(\phi)\varphi$</td><td>\Chi(\chi)</td><td>$\Chi(\chi)$</td><td>\Psi(\psi)</td><td>$\Psi(\psi)$</td></tr><tr><td>\Delta(\delta)</td><td>$\Delta(\delta)$</td><td>\Theta(\theta)\vartheta</td><td>$\Theta(\theta)\vartheta$</td><td>\Mu(\mu)</td><td>$\Mu(\mu)$</td></tr><tr><td>\Pi(\pi)\varpi</td><td>$\Pi(\pi)\varpi$</td><td>\Omega(\omega)</td><td>$\Omega(\omega)$</td><td>\upsilon</td><td>$\upsilon$</td></tr><tr><td>\ell</td><td>$\ell$</td><td>\eth</td><td>$\eth$</td><td>\hbar</td><td>$\hbar$</td></tr><tr><td>\hslash</td><td>$\hslash$</td><td>\mho</td><td>$\mho$</td><td>\partial</td><td>$\partial$</td></tr></tbody></table><h3 id="12、特殊字符"><a href="#12、特殊字符" class="headerlink" title="12、特殊字符"></a>12、特殊字符</h3><h4 id="①说明"><a href="#①说明" class="headerlink" title="①说明"></a>①说明</h4><blockquote><p>可以在字符前使用<code>\large</code>或<code>\small</code>以显示更大或更小的字符。${\LARGE A}{\Large A}{\large A}A{\small A}$</p></blockquote><h4 id="②关系运算符"><a href="#②关系运算符" class="headerlink" title="②关系运算符"></a>②关系运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\pm(\mp)</td><td>$\pm(\mp)$</td><td>\times</td><td>$\times$</td><td>\div</td><td>$\div$</td></tr><tr><td>\nmid</td><td>$\nmid$</td><td>\cdot</td><td>$\cdot$</td><td>\mid</td><td>$\mid$</td></tr><tr><td>\bigodot</td><td>$\bigodot$</td><td>\bigotimes</td><td>$\bigotimes$</td><td>\bigoplus</td><td>$\bigoplus$</td></tr><tr><td>\ge</td><td>$\ge$</td><td>\le</td><td>$\le$</td><td>\ll</td><td>$\ll$</td></tr><tr><td>\geqslant</td><td>$\geqslant$</td><td>\leqslant</td><td>$\leqslant$</td><td>\neq</td><td>$\neq$</td></tr><tr><td>\approx</td><td>$\approx$</td><td>\xlongequal{文本}</td><td>$\xlongequal{文本}$</td><td>\triangleq</td><td>$\triangleq$</td></tr><tr><td>\sim</td><td>$\sim$</td><td>\doteq</td><td>$\doteq$</td><td>\equiv</td><td>$\equiv$</td></tr><tr><td>\cong</td><td>$\cong$</td><td>\propto</td><td>$\propto$</td><td>\parallel(\</td><td>)</td></tr><tr><td>\prec</td><td>$\prec$</td><td>\pmod{2}</td><td>$\pmod{2}$</td><td>\bmod</td><td>$\bmod{2}$</td></tr></tbody></table><h4 id="③集合运算符"><a href="#③集合运算符" class="headerlink" title="③集合运算符"></a>③集合运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\emptyset</td><td>$\emptyset$</td><td>\varnothing</td><td>$\varnothing$</td><td></td><td></td></tr><tr><td>\subset</td><td>$\subset$</td><td>\subseteq</td><td>$\subseteq$</td><td>\subsetneq</td><td>$\subsetneq$</td></tr><tr><td>\supset</td><td>$\supset$</td><td>\supseteq</td><td>$\supseteq$</td><td>\supsetneq</td><td>$\supsetneq$</td></tr><tr><td>\bigcap</td><td>$\bigcap$</td><td>\bigcup</td><td>$\bigcup$</td><td>\setminus</td><td>$\setminus$</td></tr><tr><td>\bigvee</td><td>$\bigvee$</td><td>\bigwedge</td><td>$\bigwedge$</td><td></td><td></td></tr><tr><td>\in</td><td>$\in$</td><td>\notin</td><td>$\notin$</td><td>\ni</td><td>$\ni$</td></tr></tbody></table><h4 id="④三角运算符"><a href="#④三角运算符" class="headerlink" title="④三角运算符"></a>④三角运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\circ</td><td>$\circ$</td><td>\bot</td><td>$\bot$</td><td>\angle</td><td>$\angle$</td></tr><tr><td>\degree</td><td>$\degree$</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="⑤微积分运算符"><a href="#⑤微积分运算符" class="headerlink" title="⑤微积分运算符"></a>⑤微积分运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\int</td><td>$\int$</td><td>\iint</td><td>$\iint$</td><td>\iiint</td><td>$\iiint$</td></tr><tr><td>\oint</td><td>$\oint$</td><td>\oiint</td><td>$\oiint$</td><td>\prime(‘)</td><td>$\prime$</td></tr><tr><td>\lim</td><td>$\lim$</td><td>\infin</td><td>$\infin$</td><td>\nabla</td><td>$\nabla$</td></tr><tr><td>\grad</td><td>$\grad$</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="⑥逻辑运算符"><a href="#⑥逻辑运算符" class="headerlink" title="⑥逻辑运算符"></a>⑥逻辑运算符</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\because</td><td>$\because$</td><td>\therefore</td><td>$\therefore$</td><td></td><td></td></tr><tr><td>\forall</td><td>$\forall$</td><td>\exist</td><td>$\exist$</td><td></td><td></td></tr><tr><td>\not&gt;</td><td>$\not&gt;$</td><td>\not&lt;</td><td>$\not&lt;$</td><td></td><td></td></tr><tr><td>\land</td><td>$\land$</td><td>\lor</td><td>$\lor$</td><td>\lnot</td><td>$\lnot$</td></tr><tr><td>\top</td><td>$\top$</td><td>\vdash</td><td>$\vdash$</td><td>\vDash</td><td>$\vDash$</td></tr></tbody></table><h4 id="⑦带帽符号"><a href="#⑦带帽符号" class="headerlink" title="⑦带帽符号"></a>⑦带帽符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\hat{xy}</td><td>$\hat{xy}$</td><td>\widehat{xyz}</td><td>$\widehat{xyz}$</td></tr><tr><td>\tilde{xy}</td><td>$\tilde{xy}$</td><td>\widetilde{xyz}</td><td>$\widetilde{xyz}$</td></tr><tr><td>\check{x}</td><td>$\check{x}$</td><td>\breve{y}</td><td>$\breve{y}$</td></tr><tr><td>\grave{x}</td><td>$\grave{x}$</td><td>\acute{y}</td><td>$\acute{y}$</td></tr><tr><td>\dot{x}</td><td>$\dot{x}$</td><td>\ddot{x}</td><td>$\ddot{x}$</td></tr><tr><td>\overparen{xy}</td><td>$\overparen{xy}$</td><td></td><td></td></tr></tbody></table><h4 id="⑧选取符号"><a href="#⑧选取符号" class="headerlink" title="⑧选取符号"></a>⑧选取符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\fbox{a+b+c+d}</td><td>$\fbox{a+b+c+d}$</td><td></td><td></td></tr><tr><td>\overbrace{xx\cdots x}^{10个x}</td><td>$\overbrace{xx\cdots x}^{10个x}$</td><td>\underbrace{xx\cdots x}_{10个x}</td><td>$\underbrace{xx\cdots x}_{10个x}$</td></tr></tbody></table><h4 id="⑨箭头符号"><a href="#⑨箭头符号" class="headerlink" title="⑨箭头符号"></a>⑨箭头符号</h4><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>\leftarrow</td><td>$\leftarrow$</td><td>\rightarrow</td><td>$\rightarrow$</td><td>\leftrightarrow</td><td>$\leftrightarrow$</td></tr><tr><td>\longleftarrow</td><td>$\longleftarrow$</td><td>\longrightarrow</td><td>$\longrightarrow$</td><td>\longleftrightarrow</td><td>$\longleftrightarrow$</td></tr><tr><td>\Leftarrow</td><td>$\Leftarrow$</td><td>\Rightarrow</td><td>$\Rightarrow$</td><td>\Leftrightarrow</td><td>$\Leftrightarrow$</td></tr><tr><td>\Longleftarrow</td><td>$\Longleftarrow$</td><td>\Longrightarrow</td><td>$\Longrightarrow$</td><td>\Longleftrightarrow</td><td>$\Longleftrightarrow$</td></tr><tr><td>\uparrow</td><td>$\uparrow$</td><td>\downarrow</td><td>$\downarrow$</td><td>\updownarrow</td><td>$\updownarrow$</td></tr><tr><td>\Uparrow</td><td>$\Uparrow$</td><td>\Downarrow</td><td>$\Downarrow$</td><td>\Updownarrow</td><td>$\Updownarrow$</td></tr><tr><td>\to</td><td>$\to$</td><td>\swarrow</td><td>$\swarrow$</td><td>\nearrow</td><td>$\nearrow$</td></tr><tr><td>\gets</td><td>$\gets$</td><td>\searrow</td><td>$\searrow$</td><td>\nwarrow</td><td>$\nwarrow$</td></tr><tr><td>\mapsto</td><td>$\mapsto$</td><td>\rightrightarrows</td><td>$\rightrightarrows$</td><td></td><td></td></tr></tbody></table><h4 id="⑩空格"><a href="#⑩空格" class="headerlink" title="⑩空格"></a>⑩空格</h4><table><thead><tr><th>输入</th><th>效果</th><th>输入</th><th>效果</th><th>输入</th><th>效果</th></tr></thead><tbody><tr><td>\!</td><td>$</td><td>!</td><td>$</td><td>默认</td><td>$</td></tr><tr><td>,</td><td>$</td><td>,</td><td>$</td><td>;(\ )</td><td>$</td></tr></tbody></table><h3 id="13、字体"><a href="#13、字体" class="headerlink" title="13、字体"></a>13、字体</h3><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">$&#123;\字体&#123;需要转换的字符&#125;&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><table><thead><tr><th>输入</th><th>说明</th><th>显示</th><th>输入</th><th>说明</th><th>显示</th></tr></thead><tbody><tr><td>\rm</td><td>罗马体</td><td>${\rm{Sample}}$</td><td>\cal</td><td>花体</td><td>${\cal{Sample}}$</td></tr><tr><td>\it</td><td>意大利体</td><td>${\it{Sample}}$</td><td>\Bbb</td><td>黑板粗体</td><td>${\Bbb{Sample}}$</td></tr><tr><td>\bf</td><td>粗体</td><td>${\bf{Sample}}$</td><td>\mit</td><td>数学斜体</td><td>${\mit{Sample}}$</td></tr><tr><td>\sf</td><td>等线体</td><td>${\sf{Sample}}$</td><td>\scr</td><td>手写体</td><td>${\scr{Sample}}$</td></tr><tr><td>\tt</td><td>打字机体</td><td>${\tt{Sample}}$</td><td>\frak</td><td>旧德式字体</td><td>${\frak{Sample}}$</td></tr></tbody></table><h3 id="14、大括号和行标"><a href="#14、大括号和行标" class="headerlink" title="14、大括号和行标"></a>14、大括号和行标</h3><blockquote><p>说明:  使用<code>\left</code>和<code>\right</code>来创建自动匹配高度的<code>()</code>、<code>[]</code>、<code>&#123;&#125;</code>、<code>.</code>。在每个公式末尾使用<code>\tag&#123;行标&#125;</code>来实现行标。</p></blockquote><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$$>f\left(>\left[>\dfrac&#123;1+\&#123;x,y\&#125;&#125;&#123;\left(\dfrac&#123;x&#125;&#123;y&#125;+\dfrac&#123;y&#125;&#123;x&#125;\right)(u+1)&#125;+a>\right]>^&#123;\dfrac&#123;3&#125;&#123;2&#125;&#125;>\right)>\tag&#123;行标&#125;>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$$<br>f\left(\left[\dfrac{1+{x,y}}{\left(\dfrac{x}{y}+\dfrac{y}{x}\right)(u+1)}+a\right]^{\dfrac{3}{2}}\right)\tag{行标}<br>$$</p></blockquote><blockquote><p>说明:如果你想将行内显示的分隔符也变大,也可以使用<code>\middle</code>命令</p></blockquote><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$$>\left\langle q\middle\|\dfrac&#123;\dfrac&#123;x&#125;&#123;y&#125;&#125;&#123;\dfrac&#123;u&#125;&#123;v&#125;&#125;\middle|p\right\rangle>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$$<br>\left\langle q\middle|\dfrac{\dfrac{x}{y}}{\dfrac{u}{v}}\middle|p\right\rangle<br>$$</p></blockquote><h3 id="15、其他命令"><a href="#15、其他命令" class="headerlink" title="15、其他命令"></a>15、其他命令</h3><h4 id="①注释文字"><a href="#①注释文字" class="headerlink" title="①注释文字"></a>①注释文字</h4><blockquote><p>代码:</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\text&#123;文字&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><blockquote><p>效果:<br>$$<br>f(n)&#x3D;\begin{cases}n&#x2F;2,&amp;\text{if $n$ is even}\3n+1,&amp;\text{if $n$ is odd}\end{cases}<br>$$</p></blockquote><h4 id="③文字颜色"><a href="#③文字颜色" class="headerlink" title="③文字颜色"></a>③文字颜色</h4><blockquote><ul><li>适用新旧浏览器<br>代码:<pre class="line-numbers language-text" data-language="text"><code class="language-text">$\color&#123;颜色&#125;&#123;文字&#125;$<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></blockquote><table><thead><tr><th>输入</th><th>显示</th><th>输入</th><th>显示</th><th>输入</th><th>显示</th></tr></thead><tbody><tr><td>black</td><td>$\color{black}{color}$</td><td>grey</td><td>$\color{grey}{color}$</td><td>silver</td><td>$\color{silver}{color}$</td></tr><tr><td>white</td><td>$\color{white}{color}$</td><td>maroon</td><td>$\color{maroon}{color}$</td><td>red</td><td>$\color{red}{color}$</td></tr><tr><td>yellow</td><td>$\color{yellow}{color}$</td><td>lime</td><td>$\color{lime}{color}$</td><td>olive</td><td>$\color{olive}{color}$</td></tr><tr><td>green</td><td>$\color{green}{color}$</td><td>teal</td><td>$\color{teal}{color}$</td><td>auqa</td><td>$\color{auqa}{color}$</td></tr><tr><td>blue</td><td>$\color{blue}{color}$</td><td>navy</td><td>$\color{navy}{color}$</td><td>purple</td><td>$\color{purple}{color}$</td></tr><tr><td>fuchsia</td><td>$\color{fuchsia}{color}$</td><td></td><td></td><td></td><td></td></tr></tbody></table><blockquote><ul><li>适用新版浏览器<br>代码:<pre class="line-numbers language-text" data-language="text"><code class="language-text">>$\color&#123;#rgb&#125;&#123;文字&#125;$    (注:其中r、g、b可以输入0~9和a~f来分别表示红色、绿色和蓝色的纯度)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></blockquote><table><thead><tr><th>输入</th><th>输出</th><th>输入</th><th>输出</th><th>输入</th><th>输出</th><th>输入</th><th>输出</th></tr></thead><tbody><tr><td>#000</td><td>$\color</td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 文档学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>交换技术-VLAN</title>
      <link href="/2023/07/31/jiao-huan-ji-vlan-ji-zhu/"/>
      <url>/2023/07/31/jiao-huan-ji-vlan-ji-zhu/</url>
      
        <content type="html"><![CDATA[<h1 id="交换技术-VLAN"><a href="#交换技术-VLAN" class="headerlink" title="交换技术-VLAN"></a>交换技术-VLAN</h1><h2 id="VLAN概述"><a href="#VLAN概述" class="headerlink" title="VLAN概述"></a>VLAN概述</h2><h3 id="VLAN的由来"><a href="#VLAN的由来" class="headerlink" title="VLAN的由来"></a>VLAN的由来</h3><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311809710.png" alt="没有部署VLAN的信息传输过程"></p><ol><li>在典型交换网络中，当某台主机发送一个广播帧或未知单播帧时，该数据帧会被泛洪，甚至传递到整个广播域。（图示中PC1的目标是PC2由于发送一个广播会导致如图所示产生大量垃圾流量）</li><li>广播域越大，产生的网络安全问题、垃圾流量问题，就越严重。</li></ol><ul><li>为了解决广播域带来的问题，人们引入了 VLAN 技术：通过在交换机上部署 VLAN，可以将一个规模较大的广播域在逻辑上划分成若干个不同的、规模较小的广播域，由此可以有效地提升网络的安全性，同时减少垃圾流量，节约网络资源。</li></ul><h3 id="什么是VLAN"><a href="#什么是VLAN" class="headerlink" title="什么是VLAN"></a>什么是VLAN</h3><ul><li>VLAN（Virtual Local Area Network）,即虚拟局域网技术，是对连接到的第二层交换机端口的网络用户的逻辑分段，作用是将物理的局域网在逻辑上划分为多个广播域的技术。<ol><li>每一个 VLAN 对应一个广播域</li><li>每一个 VLAN 对应一个子网</li></ol></li></ul><h2 id="VLAN的工作原理"><a href="#VLAN的工作原理" class="headerlink" title="VLAN的工作原理"></a>VLAN的工作原理</h2><h3 id="VLAN基本原理"><a href="#VLAN基本原理" class="headerlink" title="VLAN基本原理"></a>VLAN基本原理</h3><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311810733.png" alt="进行VLAN部署后的信息传输过程"></p><p>虚拟局域网 VLAN 可以隔离广播域（如图所示PC1只会向同一VLAN下发送广播）</p><ul><li>特点：不受地域限制。同一 VLAN 内的设备才能直接进行二层通信。</li></ul><h3 id="如何实现VLAN"><a href="#如何实现VLAN" class="headerlink" title="如何实现VLAN"></a>如何实现VLAN</h3><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311807995.png" alt="VLAN实现图"></p><p>Switch1 与 Switch2 同属一个企业，该企业统一规划了网络中的 VLAN。其中 VLAN10用于 A 部门，VLAN20 用于 B 部门。A、B 部门的员工在 Switch1 和 Switch2 上都有接入。</p><p>PC1 发出的数据经过 Switch1 和 Switch2 之间的链路到达了 Switch2。<strong>如果不加处理，后者无法判断该数据所属的 VLAN，也不知道应该将这个数据输出到本地哪个 VLAN中。</strong></p><p>所以我们在传输信息过程中插入了<strong>VLAN标签</strong></p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311810438.png" alt="VLAN传输过程"></p><p>Switch1 和 Switch2 之间的链路要承载多个 VLAN 的数据，需要一种基于 VLAN 的数据“标记”手段，以便对不同 VLAN 的数据帧进行区分。IEEE 802.1Q 标准（也被称为 Dot1Q）定义了该“标记”方法。该标准对传统的以太网数据帧进行修改，在帧头中插入 802.1Q Tag，而在该 Tag 中，便可以写入 VLAN 信息。</p><h3 id="VLAN标签（VLAN-Tag）"><a href="#VLAN标签（VLAN-Tag）" class="headerlink" title="VLAN标签（VLAN Tag）"></a>VLAN标签（VLAN Tag）</h3><p><strong>VLAN标签：</strong>要使交换机能够分辨不同 VLAN 的报文，需要在报文中添加标识 VLAN 信息的字段。IEEE 802.1Q 协议规定，在以太网数据帧中加入 4 个字节的 VLAN 标签，又称 VLAN Tag，简称 Tag。</p><ul><li>交换机如何识别接收到的数据帧属于哪个 VLAN？</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311807201.png" alt="VLAN接收数据帧"></p><ul><li><p>如图所示，SW1 识别出某个帧是属于哪个 VLAN 后，会在这个帧的特定位置上添加一个标签。这个标签明确地标明了这个帧是属于哪个 VLAN 的。其他交换机（如 SW2）收到这个带标签的数据帧后，就能轻而易举地直接根据标签信息识别出这个帧属于哪个VLAN。</p></li><li><p>IEEE 802.1Q 定义了这种带标签的数据帧的格式。满足这种格式的数据帧称为 IEEE802.1Q 数据帧，也称 VLAN 数据帧。</p></li></ul><h3 id="VLAN的帧格式"><a href="#VLAN的帧格式" class="headerlink" title="VLAN的帧格式"></a>VLAN的帧格式</h3><p>带有 tag 的是 802.1Q 数据帧，untag 的为标准的以太网帧，通过 Tag 中的信息来区分不同的 VALN</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311810399.png" alt="VLAN的帧格式"></p><p>先来看一下 vlan 数据包的帧格式，整个 vlan 信息大小为 4 个字节，分别为 2 个字节的标签协议标识符（Tag Protocol Identifier），和 2 个字节标签控制信息（Tag Control Infomation）。</p><p><strong>在一个 VLAN 交换网络中，以太网帧主要有以下两种形式：</strong></p><ol><li>有标记帧（Tagged 帧）：IEEE 802.1Q 协议规定，在以太网数据帧的目的 MAC 地址和源 MAC 地址字段之后、协议类型字段之前加入 4 个字节的 VLAN 标签（又称VLAN Tag，简称 Tag）的数据帧。</li><li>无标记帧（Untagged 帧）：原始的、未加入 4 字节 VLAN 标签的数据帧。</li></ol><p><strong>VLAN 数据帧中的主要字段：</strong></p><ol><li><p>TPID（标签协议标识符）：标识数据帧的类型，值为 0x8100 时表示 802.1Q 帧。<br>总长为 2 字节，Tag Protocol Identifier（标签协议标识符），表示数据帧类型。取值为 0x8100 时表示 IEEE 802.1Q 的 VLAN 数据帧。如果不支持 802.1Q 的设备收到这样的帧，会将其丢弃。各设备厂商可以自定义该字段的值。当邻居设备将 TPID 值配置为非 0x8100 时，为了能够识别这样的报文，实现互通，必须在本设备上修改 TPID 值，确保和邻居设备的 TPID 值配置一致。</p></li><li><p>标签控制信息（Tag Control Infomation），又有三个子字段组成：</p><p> a.PRI（优先级）：3 bit，Priority，表示数据帧的优先级，用于 QoS。取值范围为 0～7，值越大优先级越高。当网络阻塞时，交换机优先发送优先级高的数据帧，主要用于 QoS。</p><p> b.CFI（标准格式指示符）：在以太网环境中，该字段的值为 0。</p><p> c.VLAN ID（VLAN 标识符）：标识该帧所属的 VLAN</p></li></ol><h2 id="VLAN的范围"><a href="#VLAN的范围" class="headerlink" title="VLAN的范围"></a>VLAN的范围</h2><p>VID 占 12bit，所以是 2 的 12 次方个 VLAN，共 4096VLAN，0 和 4095 作为保留，1-4094 可用</p><ul><li><p>VLAN 1-1001： 以太网 VLAN（普通）：用于以太网的 VLAN（其中 1 是默认 VLAN，用户能使用，但是无法删除）</p></li><li><p>VLAN1025-4094：拓展 VLAN</p></li><li><p>VLAN1：自然 VLAN（本征 VLAN）–pvid(vlan1）—— 一般用于流量较大的部门</p></li></ul><h2 id="交换机的接口类型"><a href="#交换机的接口类型" class="headerlink" title="交换机的接口类型"></a>交换机的接口类型</h2><p>交换机接口分为以下三种类型：<code>acess</code> <code>trunk</code> <code>hybrid</code> </p><ol><li><strong>acess 端口</strong>：主要用来连接终端（PC、服务器）设备。Access 接口所连接的这些设备的网卡往往只收发无标记帧。Access 接口只能加入一个 VLAN。</li><li><strong>trunk 端口</strong>：主要用来连接交换机、路由器和防火墙等能识别 Tag 的设备。Trunk 接口允许多个 VLAN 的数据帧通过，这些数据帧通过 802.1Q Tag 实现区分。</li><li><strong>hybrid 端口</strong>：是 access 端口与 trunk 端口的结合。也允许多个 VLAN 的数据帧通过，这些数据帧通过 802.1Q Tag 实现区分。用户可以灵活指定 Hybrid 接口在发送某个（或某些）VLAN 的数据帧时是否携带 Tag。<strong>华为设备默认的接口类型是 Hybrid。</strong></li></ol><p>本篇重点介绍一下<strong>Access</strong>接口</p><p>我们已经介绍了交换机如何识别数据帧属于哪个 VLAN 以及 VLAN 的划分方式，那交换机对于 Untagged 帧和 Tagged 帧又是如何处理的呢？</p><p><strong>Access 接口特点：</strong>仅允许 VLAN ID 与接口 PVID 相同的数据帧通过。</p><p><strong>Access 接口接收数据帧：</strong></p><p> 当 Access 接口从链路上收到一个 Untagged 帧，交换机会在这个帧中添加上 VID为 PVID 的 Tag，然后对得到的 Tagged 帧进行转发操作（泛洪、转发、丢弃）。</p><p> 当 Access 接口从链路上收到一个 Tagged 帧，交换机会检查这个帧的 Tag 中的VID 是否与 PVID 相同。如果相同，则对这个 Tagged 帧进行转发操作；如果不同，则直接丢弃这个 Tagged 帧。</p><p><strong>Access 接口发送数据帧：</strong></p><p> 当一个 Tagged 帧从本交换机的其他接口到达一个 Access 接口后，交换机会检查这个帧的 Tag 中的 VID 是否与 PVID 相同：</p><p> 如果相同，则将这个 Tagged 帧的 Tag 进行剥离，然后将得到的 Untagged 帧从</p><p>链路上发送出去； 如果不同，则直接丢弃这个 Tagged 帧</p><p> <strong>Access 端口处理数据的方式</strong></p><ol><li>当 Access 端口收到不带 tag 的数据帧时，会打上端口的 PVID 的 tag。</li><li>当 Access 端口接收到 Tagged 帧时，如果该数据帧的 VLAN ID 与端口的 PVID 相同则接收，不同则丢弃。</li><li>当 Access 端口发送时，数据帧中的 VLAN ID 与 PVID 相同则剥离 tag 后发送，如果不同则禁止发送。</li></ol><h2 id="VLAN的技术优势"><a href="#VLAN的技术优势" class="headerlink" title="VLAN的技术优势"></a>VLAN的技术优势</h2><ol><li><p><strong>广播风暴防范</strong></p><p>限制网络上的广播，将网络划分为多个 VLAN 可减少参与广播风暴的设备数量。VLAN分段可以防止广播风暴波及整个网络。VLAN 可以提供建立防火墙的机制，防止交换网络的过量广播。使用 VLAN，可以将某个交换端口或用户赋予某一个特定的 VLAN 组，该 VLAN 组可以在一个交换网中或跨接多个交换机，在一个 VLAN 中的广播不会送到VLAN 之外。同样，相邻的端口不会收到其他 VLAN 产生的广播。这样可以减少广播流量，释放带宽给用户应用，减少广播的产生。</p></li><li><p><strong>安全</strong></p><p>增强局域网的安全性’含有敏感数据的用户组可与网络的其余部分隔离，从而降低泄露机密信息的可能性。不同 VLAN 内的报文在传输时是相互隔离的，即一个 VLAN 内的用户不能和其他 VLAN 内的用户直接通信，如果不同 VLAN 要进行通信，则需要通过路由器或三层交换机等三层设备。</p></li><li><p><strong>成本降低</strong></p><p>成本高昂的网络升级需求减少，现有带宽和上行链路的利用率更高，因而可节约成本。</p></li><li><p><strong>性能提高</strong></p><p>将第二层平面网络划分为多个逻辑工作组(广播域)可以减少网络上不必要的流量并提高性能。</p></li><li><p><strong>提高人员工作效率</strong></p><p>VLAN 为网络管理带来了方便，因为有相似网络需求的用户将共享同一个 VLAN。</p></li><li><p><strong>简化项目管理或应用管理</strong></p><p>VLAN 将用户和网络设备聚合到一起，以支持商业需求或地域上的需求。通过职能划分，项目管理或特殊应用的处理都变得十分方便，例如可以轻松管理教师的电子教学开发平台。此外，也很容易确定升级网络服务的影响范围。</p></li><li><p><strong>增加了网络连接的灵活性</strong></p><p>借助 VLAN 技术，能将不同地点、不同网络、不同用户组合在一起，形成一个虚拟的网络环境，就像使用本地 VLAN 一样方便、灵活、有效。VLAN 可以降低移动或变更工作站地理位置的管理费用，特别是一些业务情况有经常性变动的公司使用了 VLAN 后，这部分管理费用大大降低。</p></li></ol><h2 id="VLAN的部署实验"><a href="#VLAN的部署实验" class="headerlink" title="VLAN的部署实验"></a>VLAN的部署实验</h2><h3 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h3><p>搭建如下拓扑图并划好对应的VLAN，并且让对应VLAN能够正常通信，不同VLAN不能进行通信。</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311807951.png" alt="VLAN部署网络拓扑"></p><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><p>学会创建VLAN、命名VLAN、删除VLAN，将接口划入VLAN。</p><h3 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h3><p>首先如图所示配置好PC机的相关ip</p><h4 id="步骤一：创建VLAN"><a href="#步骤一：创建VLAN" class="headerlink" title="步骤一：创建VLAN"></a>步骤一：创建VLAN</h4><blockquote><p>[SW1] vlan 10  &#x2F;&#x2F;创建VLAN10</p><p>[SW1] vlan batch 20 30  &#x2F;&#x2F;批量创建VLAN20和VLAN30</p></blockquote><h4 id="步骤二：在SW1上将接口划入指定的-VLAN"><a href="#步骤二：在SW1上将接口划入指定的-VLAN" class="headerlink" title="步骤二：在SW1上将接口划入指定的 VLAN"></a>步骤二：在SW1上将接口划入指定的 VLAN</h4><blockquote><p>[SW1] int e0&#x2F;0&#x2F;1  &#x2F;&#x2F;进入接口e0&#x2F;0&#x2F;1</p><p>[SW1-Ethernet0&#x2F;0&#x2F;1] port link-type access  &#x2F;&#x2F;配置接口类型为 access 接口</p><p>[SW1-Ethernet0&#x2F;0&#x2F;1] port default vlan 10  &#x2F;&#x2F;配置接口的缺省 vlan 为 10 ，pvid&#x3D;10</p></blockquote><p>用同样的方式将其他三个接口配置对应的VLAN。</p><ul><li>使用指令查看VLAN接口是否划入VLAN当中</li></ul><blockquote><p>dis vlan  &#x2F;&#x2F;查看 vlan 的相关配置</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311811411.png" alt="VLAN相关配置"></p><blockquote><p>dis port vlan  &#x2F;&#x2F;查看接口vlan类型</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311807788.png" alt="VLAN接口类型"></p><h4 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h4><ul><li>PC2ping其他PC的结果，我们发现只有在同一VLAN下的PC4能够ping通，其他VLAN下的PC机无法ping通，说明试验成功。</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311807841.png" alt="PC2与其他PC通讯结果"></p><ul><li>PC1ping其他PC的结果，我们发现都ping不通，这是因为VLAN10里面只有PC1这一台PC机，不在同一VLAN下当然ping不通其他的PC机。</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307311811549.png" alt="PC1与其他PC通讯结果"></p><ul><li>如果发现PC1、PC3都无法与其他PC机通讯，PC2与PC4只能相互通讯，则说明实验成功。</li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><blockquote><p>vlan batch 10 20 30  &#x2F;&#x2F;同时配置 vlan10、20、30</p><p>undo vlan batch 10 20 30  &#x2F;&#x2F;同时删除 vlan10、20、30</p><p>port link-type access  &#x2F;&#x2F;进入接口，配置接口类型为 access，默认是 hybrid</p><p>port default vlan 10  &#x2F;&#x2F;为该接口分配给 vlan10</p><p>display vlan  &#x2F;&#x2F;查看 vlan 的相关配置</p><p>display port vlan  &#x2F;&#x2F;查看接口vlan类型</p><p>port link-type trunk  &#x2F;&#x2F;为接口配置类型为 trunk</p><p>port trunk allow-pass vlan all  &#x2F;&#x2F;允许所有 vlan 通过，默认不允许所有 vlan 通过</p><p>port trunk allow-pass vlan 2 to 4094  &#x2F;&#x2F;允许 vlan 2 到 vlan 4094 通过</p><p>port trunk allow-pass vlan 2 3  &#x2F;&#x2F;允许 VLAN2 和 3 通过</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络拓扑 </tag>
            
            <tag> eNSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链路聚合</title>
      <link href="/2023/07/29/lian-lu-ju-he/"/>
      <url>/2023/07/29/lian-lu-ju-he/</url>
      
        <content type="html"><![CDATA[<h1 id="链路聚合"><a href="#链路聚合" class="headerlink" title="链路聚合"></a>链路聚合</h1><h2 id="链路聚合概述"><a href="#链路聚合概述" class="headerlink" title="链路聚合概述"></a>链路聚合概述</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;对于企业来说，随着公司业务的不断扩张，公司内部的网络规模也随之扩大，公司对网络的带宽和可靠性提出了越来越高的要求，管理难度也会相应变大，如果某一条链路发生故障的话会影响到整个网络。通常情况下，我们用下列方法解决网络故障问题：常用的链路更换为更高速率的接口板（如E接口换成G接口）或者更换更高速率的接口板设备来增加带，但是更换设备需要高额的费用，并且不够灵活，跟换设备后需要重新配置。所以我们可以采用链路聚合的方式来提高网咯带宽以及网络的稳定性。</p><h2 id="链路聚合原理"><a href="#链路聚合原理" class="headerlink" title="链路聚合原理"></a>链路聚合原理</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;链路聚合（Eth-Trunk）是一种网络技术，可以在不进行硬件升级的条件下，通过将多个物理接口捆绑为一个逻辑接口，以实现出&#x2F;入流量吞吐量在各成员端口的负荷分担。<br>&nbsp;&nbsp;&nbsp;&nbsp;链路聚合可以将多条物理链路绑定成一个逻辑链路，从而提高网络带宽和可靠性。在这个过程中，多个物理链路被视为一个逻辑链路，数据包会被分配到不同的物理链路上进行传输，从而实现负载均衡和冗余备份，如果某条物理链路出现故障，这条逻辑链路依然存在。</p><h2 id="链路聚合的作用"><a href="#链路聚合的作用" class="headerlink" title="链路聚合的作用"></a>链路聚合的作用</h2><ol><li>用于实现链路冗余，以及带宽加倍（扩充）和可靠性。</li><li>负载分担，在一个 Eth-Trunk 端口内，可以实现流量负载分担。</li><li>提高可靠性，当某个成员端口连接的物理链路出现故障时，流量会切换到其他可用的链路上，从而提高整个 Trunk 链路的可靠性。</li><li>增加带宽，Trunk 端口的总带宽是各成员端口带宽的总和。</li></ol><h2 id="链路聚合的方式为以下两种方式"><a href="#链路聚合的方式为以下两种方式" class="headerlink" title="链路聚合的方式为以下两种方式"></a>链路聚合的方式为以下两种方式</h2><p><strong>静态trunk</strong>：静态 Trunk 将多条物理链路直接加入 Trunk 组，形成一条逻辑链路，又称为手工负载分担模式。</p><p><strong>动态LACP</strong>：链路聚合控制协议(Link Aggregation Control Protocol，LACP）是一种实现链路动态汇聚的协议。LACP 协议通过链路聚合控制协议数据单元(Link Aggregation Control Protocol Data Unit，LACPDU)与对端交互信息。激活某端口的 LACP 协议后，该端口将通过发送 LACPDU 向对端通告自己的系统优先级、系统 MAC 地址、端口优先级和端口号。对端接收到这些信息后，将这些信息与自己的属性比较，选择能够聚合的端口，从而双方可以对端口加入或退出某个动态聚合组达成一致。</p><h2 id="链路聚合实验"><a href="#链路聚合实验" class="headerlink" title="链路聚合实验"></a>链路聚合实验</h2><h3 id="实验要求"><a href="#实验要求" class="headerlink" title="实验要求"></a>实验要求</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;下面就配置 LSW2 和 LSW1 之间的两条物理链路为一条聚合链路，配置 LSW3 和 LSW1之间的两条物理链路为一条聚合链路，并将这两条聚合链路配置为干道链路，允许VLAN 20 和 VLAN 40 的帧通过，如图所示。</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307291830609.png" alt="静态trunk实验拓补图"></p><h3 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;学会使用静态 Trunk ，静态 Trunk将多条物理链路直接加入 Trunk 组，形成一条逻辑链路，又称为手工负载分担模式。<br>并验证聚合链路的可靠性。</p><h3 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h3><p>首先如图所示配置好PC机的相关ip</p><h4 id="步骤一：SW2与SW1互联链路配置"><a href="#步骤一：SW2与SW1互联链路配置" class="headerlink" title="步骤一：SW2与SW1互联链路配置"></a>步骤一：SW2与SW1互联链路配置</h4><h5 id="SW2的配置："><a href="#SW2的配置：" class="headerlink" title="SW2的配置："></a>SW2的配置：</h5><blockquote><p>[SW2] int Eth-Trunk 1 &#x2F;&#x2F;创建编号为 1 的 Eth-Trunk<br>[SW2-Eth-Trunk1] mode manual load-balance &#x2F;&#x2F;即工作模式为手工负载分担模式<br>[SW2-Eth-Trunk1] trunkport g 0&#x2F;0&#x2F;1 to 0&#x2F;0&#x2F;2 &#x2F;&#x2F;指定聚合链路中的物理端口<br>[SW2-Eth-Trunk1] port link-type trunk &#x2F;&#x2F;将聚合端口链路类型设置为Trunk<br>[SW2-Eth-Trunk1] port trunk allow-pass vlan 20 40 &#x2F;&#x2F;允许 VLAN 20 和VLAN 40 的帧通过</p></blockquote><h5 id="SW1的配置："><a href="#SW1的配置：" class="headerlink" title="SW1的配置："></a>SW1的配置：</h5><blockquote><p>[SW1] int Eth-Trunk 1 &#x2F;&#x2F;这个编号建议和 LSW2 上的相同<br>[SW1-Eth-Trunk1] mode manual load-balance<br>[SW1-Eth-Trunk1] trunkport g 0&#x2F;0&#x2F;1 to 0&#x2F;0&#x2F;2<br>[SW1-Eth-Trunk1] port link-type trunk<br>[SW1-Eth-Trunk1] port trunk allow-pass vlan 20 40<br>[SW1] lacp priority 100 &#x2F;&#x2F;在 SW1 上配置优先级为 100，使其成为 LACP 主动端</p></blockquote><h4 id="步骤二：SW3与SW1互联链路配置"><a href="#步骤二：SW3与SW1互联链路配置" class="headerlink" title="步骤二：SW3与SW1互联链路配置"></a>步骤二：SW3与SW1互联链路配置</h4><h5 id="SW3的配置："><a href="#SW3的配置：" class="headerlink" title="SW3的配置："></a>SW3的配置：</h5><blockquote><p>[SW3] int Eth-Trunk 2 &#x2F;&#x2F;创建编号为 2 的 Eth-Trunk<br>[SW3-Eth-Trunk1] mode manual load-balance &#x2F;&#x2F;即工作模式为手工负载分担模式<br>[SW3-Eth-Trunk1] trunkport g 0&#x2F;0&#x2F;1 to 0&#x2F;0&#x2F;2 &#x2F;&#x2F;指定聚合链路中的物理端口<br>[SW3-Eth-Trunk1] port link-type trunk &#x2F;&#x2F;将聚合端口链路类型设置为Trunk<br>[SW3-Eth-Trunk1] port trunk allow-pass vlan 20 40 &#x2F;&#x2F;允许 VLAN 20 和VLAN 40 的帧通过</p></blockquote><h5 id="SW1的配置"><a href="#SW1的配置" class="headerlink" title="SW1的配置"></a>SW1的配置</h5><blockquote><p>[SW1] int Eth-Trunk 2 &#x2F;&#x2F;这个编号建议和 LSW3 上的相同<br>[SW1-Eth-Trunk1] mode manual load-balance<br>[SW1-Eth-Trunk1] trunkport g 0&#x2F;0&#x2F;1 to 0&#x2F;0&#x2F;2<br>[SW1-Eth-Trunk1] port link-type trunk<br>[SW1-Eth-Trunk1] port trunk allow-pass vlan 20 40</p></blockquote><h4 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h4><p>用指令查看刚刚配置的eth-trunk是否配置成功</p><blockquote><p>dis eth-trunk  &#x2F;&#x2F;查看交换机上的eth-trunk</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307291829248.png" alt="eth-trunk配置结果"></p><hr><h4 id="如果需要同一VLAN下的PC之间进行通信则需要额外以下步骤："><a href="#如果需要同一VLAN下的PC之间进行通信则需要额外以下步骤：" class="headerlink" title="如果需要同一VLAN下的PC之间进行通信则需要额外以下步骤："></a>如果需要同一VLAN下的PC之间进行通信则需要额外以下步骤：</h4><h4 id="在与PC机相邻的E接口下配置access接口"><a href="#在与PC机相邻的E接口下配置access接口" class="headerlink" title="在与PC机相邻的E接口下配置access接口"></a>在与PC机相邻的E接口下配置access接口</h4><p>这里拿PC1与PC2能否通讯举例</p><p>在与PC1相连的SW2上进行配置</p><blockquote><p>[SW2] int e0&#x2F;0&#x2F;1<br>[SW2-Ethernet0&#x2F;0&#x2F;1] port link-type access  &#x2F;&#x2F;设置接口模式为access<br>[SW2-Ethernet0&#x2F;0&#x2F;1] port default vlan 20  &#x2F;&#x2F;将接口划给vlan20</p></blockquote><p>在与PC2相连的SW3上进行配置</p><blockquote><p>[SW3] int e0&#x2F;0&#x2F;1<br>[SW3-Ethernet0&#x2F;0&#x2F;1] port link-type access  &#x2F;&#x2F;设置接口模式为access<br>[SW3-Ethernet0&#x2F;0&#x2F;1] port default vlan 20   &#x2F;&#x2F;将接口划给vlan20</p></blockquote><h5 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h5><p>用PC1去pingPC2,下图显示能ping通，说明配置成功。</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307291829507.png" alt="PC通讯结果"></p><h4 id="验证链路聚合的可靠性"><a href="#验证链路聚合的可靠性" class="headerlink" title="验证链路聚合的可靠性"></a>验证链路聚合的可靠性</h4><h5 id="步骤一：首先将SW1上的其中任意一条接口关闭"><a href="#步骤一：首先将SW1上的其中任意一条接口关闭" class="headerlink" title="步骤一：首先将SW1上的其中任意一条接口关闭"></a>步骤一：首先将SW1上的其中任意一条接口关闭</h5><p>在SW1上利用指令首先将G0&#x2F;0&#x2F;1上的端口给关闭</p><blockquote><p>[SW1] int g0&#x2F;0&#x2F;1</p><p>[SW1-GigabitEthernet0&#x2F;0&#x2F;1] shutdown  &#x2F;&#x2F;将SW1上的G0&#x2F;0&#x2F;1接口关闭</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307291905362.png" alt="端口关闭结果"></p><h5 id="步骤二：验证PC1能否ping通PC2"><a href="#步骤二：验证PC1能否ping通PC2" class="headerlink" title="步骤二：验证PC1能否ping通PC2"></a>步骤二：验证PC1能否ping通PC2</h5><ul><li>关闭端口后需要等待50~90秒的时间PC1方可与PC2通信</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307291905576.png" alt="PC1与PC2通讯结果"></p><ul><li>实验成功的话，则可以证明链路聚合具有可靠性。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络拓扑 </tag>
            
            <tag> eNSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora+PicGo实现文章管理</title>
      <link href="/2023/07/28/tu-wen-guan-li/"/>
      <url>/2023/07/28/tu-wen-guan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="对博客文章进行图文管理"><a href="#对博客文章进行图文管理" class="headerlink" title="对博客文章进行图文管理"></a>对博客文章进行图文管理</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ol><li>Typora：一款轻量级Markdown格式的编辑器</li><li>PicGo：一个用于快速上传图片并获取图片 URL 链接的工具</li></ol><h2 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h2><ol><li><a href="https://molunerfinn.com/PicGo/">PicGo官网</a> </li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85">PicGo手册</a> </li><li><a href="https://pan.baidu.com/s/1VOVNDknjpmmGjkBqaeAz_A">typora百度网盘下载地址</a> 提取码：6ybf</li></ol><h2 id="搭建图库"><a href="#搭建图库" class="headerlink" title="搭建图库"></a>搭建图库</h2><h3 id="搭建准备"><a href="#搭建准备" class="headerlink" title="搭建准备"></a>搭建准备</h3><ol><li>下载并安装<a href="https://nodejs.org/en">node.js</a></li><li>下载并安装<a href="https://molunerfinn.com/PicGo/">PicGo</a></li><li>下载并安装<a href="https://pan.baidu.com/s/1VOVNDknjpmmGjkBqaeAz_A">typora</a></li><li>在 typora 左上角的 <code>文件(F) -&gt; 偏好设置 -&gt; 图像</code> 配置如图所示<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281613928.png" alt="typora图像设置"></li><li>配置 PIcGo 设置如图所示<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281613774.png" alt="PicGo基础设置"></li></ol><h3 id="在Github上创建图库"><a href="#在Github上创建图库" class="headerlink" title="在Github上创建图库"></a>在Github上创建图库</h3><ol><li><p>首先在GIthub上新建一个存储库，打开你的Github主页，点击右上上角的<code>+</code>号然后点击<code>New repository</code>：命名为<code>image</code>或自行命名，无特殊要求<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281613901.png" alt="创建新的存储库"><br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281615862.png" alt="给存储库命名"></p></li><li><p>获取Token，点击右上角的头像进入个人设置 <code>Settings</code> 然后在左边的导航栏点击最后一个<code>Developer settings</code><br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281607541.png" alt="开发者设置"></p><ul><li>在这个界面根据步骤点击<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281641662.png" alt="生成新令牌"></li><li>然后如图配置<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281605997.png" alt="生成Token"></li><li>复制你的Token<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281604665.png" alt="复制Token"></li></ul></li></ol><h3 id="配置PicGo"><a href="#配置PicGo" class="headerlink" title="配置PicGo"></a>配置PicGo</h3><ol><li>在图床设置中找到 <code>Github</code> 然后点击 <code>+</code> 创建新的图床，配置如图所示<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281604667.png" alt="配置PicGo"></li><li>配置完成后选中 <code>tupian</code> 并且将GIthub图库设置为默认图库然后测试图片是否能上传<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281604601.png" alt="上传GIthub图库验证"><ul><li>能成功上传则说明PicGo配置成功！</li></ul></li></ol><h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><h3 id="如何用typora上传图片"><a href="#如何用typora上传图片" class="headerlink" title="如何用typora上传图片"></a>如何用typora上传图片</h3><ol><li>鼠标右键点击 <code>新建(w) -&gt; 文本文档</code> 然后将新建文本文档文档的后缀 <code>.txt</code> 改成 <code>.md</code><br>如果创建新的文档文本没有看到后缀 <code>.txt</code> 的话可能是电脑默认隐藏了文件扩展名，那么就需要以下操作</li><li>点击 <code>此电脑</code> （我的电脑）然后如图，按步骤操作即可显示文件扩展名<ul><li>如果桌面上没有 <code>此电脑</code> ，则鼠标右键桌面 <code>个性化(R) -&gt; 主题 -&gt; 桌面图标设置</code> 就可以把 <code>此电脑</code> 图标显示在桌面上了<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281623185.png" alt="显示文件扩展名"></li></ul></li><li>我们可以直接把图片文件拖进typora里面，然后右键点击 <code>上传图片</code> 即可将图片上传到之前我们所创建的图库里。然后进行验证（验证方法如图所示）<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307281634930.png" alt="上传图片验证"><ul><li>当使用浏览器输入网址能访问我们放入typroa的图片则说明上传成功！至此我们利用typora写文章就可以放入图片并且上传至我们的博客啦！</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typora </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Github搭建hexo博客</title>
      <link href="/2023/07/26/chuang-jian-zi-ji-de-bo-ke/"/>
      <url>/2023/07/26/chuang-jian-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="利用Github搭建hexo博客"><a href="#利用Github搭建hexo博客" class="headerlink" title="利用Github搭建hexo博客"></a>利用Github搭建hexo博客</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://cloud.tencent.com/developer/article/2235973">参考文章-洛栀</a>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://sunwu57.github.io/2023/03/26/%E5%88%A9%E7%94%A8github%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/">参考文章-ziye</a></p><h2 id="准备前提"><a href="#准备前提" class="headerlink" title="准备前提"></a>准备前提</h2><ol><li>提前安装好node.js <a href="https://nodejs.org/en">安装地址</a></li></ol><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307270920927.png" alt="安装node.js"></p><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/zh-cn/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/node/">淘宝 Node.js 镜像</a> 下载。</p><ol start="2"><li><p>提前安装好GIt <a href="https://git-scm.com/downloads">安装地址</a>  并且根据需要选择安装版本</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307262200348.png" alt="操作系统选择"><br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307262204462.png" alt="版本选择"></p></li><li><p>提前注册好一个Github账号，以下为注册界面（没有确认密码，请检查好自己的密码是否输入有误）<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271420367.png" alt="GIthub注册界面"></p></li><li><p>如果文章图片没有显示，请自行挂代理</p></li></ol><h2 id="正片开始"><a href="#正片开始" class="headerlink" title="正片开始"></a>正片开始</h2><ol><li><h5 id="在本地新建一个文件夹（在这里创建的是test文件夹）用于放博客源文件，路径不要有中文"><a href="#在本地新建一个文件夹（在这里创建的是test文件夹）用于放博客源文件，路径不要有中文" class="headerlink" title="在本地新建一个文件夹（在这里创建的是test文件夹）用于放博客源文件，路径不要有中文"></a>在本地新建一个文件夹（在这里创建的是<code>test</code>文件夹）用于放博客源文件，路径不要有<code>中文</code></h5></li><li><h5 id="在创建的test文件夹中，在空白处右键点击Open-Git-Bash-Here"><a href="#在创建的test文件夹中，在空白处右键点击Open-Git-Bash-Here" class="headerlink" title="在创建的test文件夹中，在空白处右键点击Open Git Bash Here"></a>在创建的<code>test</code>文件夹中，在空白处右键点击<code>Open Git Bash Here</code></h5></li><li><h5 id="使用npm命令安装Hexo，输入："><a href="#使用npm命令安装Hexo，输入：" class="headerlink" title="使用npm命令安装Hexo，输入："></a>使用npm命令安装Hexo，输入：</h5><blockquote><p>npm install -g hexo-cli &#x2F;&#x2F;安装hexo<br>hexo init blog &#x2F;&#x2F;新建一个网站，并放在blog文件夹<br>cd blog  &#x2F;&#x2F;从当前文件夹进入blog文件夹<br>hexo g  &#x2F;&#x2F;既hexo generate的缩写，生成静态文件</p></blockquote><p>构建好的效果如下:</p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307270940964.png" alt="输入上述指令并打开文件夹效果图"></p></li><li><h5 id="在Git中cd进入blog文件夹"><a href="#在Git中cd进入blog文件夹" class="headerlink" title="在Git中cd进入blog文件夹"></a>在<code>Git</code>中cd进入<code>blog</code>文件夹</h5><p>为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p><blockquote><p>hexo new test_my_site  &#x2F;&#x2F;新建一个标题为“test_my_site”的文章<br>hexo g &#x2F;&#x2F;生成静态文件<br>hexo s &#x2F;&#x2F;即hexo server的缩写，启动服务预览<br>之后在浏览器访问127.0.0.1:4000访问blog了，如需停止服务则按下Ctrl+C</p></blockquote></li><li><h5 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h5><blockquote><p>cd ~&#x2F;.ssh  &#x2F;&#x2F;检查本机已存在的ssh密钥</p></blockquote><ul><li>提示：如果显示No such file or directory 则说明你是第一次使用Git。</li></ul><blockquote><p>ssh-keygen -t rsa -C “邮件地址”  &#x2F;&#x2F;该邮箱地址为你的Github注册的邮箱地址</p></blockquote><ul><li>然后连续3次回车，最终会生成一个<code>.ssh</code>文件夹在用户目录下，在<code>C盘</code>中打开<code>用户</code>目录，在<code>当前用户</code>目录（默认是<code>Administrator</code>）下找到<code>.ssh</code>文件夹，然后找到<code>id_rsa.pub</code>文件，右键后点击打开方式选择用记事本打开并复制里面的内容，打开你的Github主页，点击右上角的头像进入个人设置 <code>Settings -&gt; SSH and GPG keys -&gt; New SSH key</code>：</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271059214.png" alt="如何配置新的SSH"></p><ul><li>key填写id_rsa.pub文件中的内容。<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271059234.png" alt="将id_rsa.pub文件中的内容填写至key"></li><li>尝试ssh连接,测试是否成功</li></ul><blockquote><p>ssh -T <a href="mailto:&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#109;">&#x67;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#98;&#46;&#99;&#x6f;&#109;</a>  &#x2F;&#x2F;这里的邮箱地址不用更改</p></blockquote><ul><li>如果提示Are you sure you want to continue connecting (yes&#x2F;no)?，输入<code>yes</code>，如果看到下列代码，则说明成功连接：</li></ul><blockquote><p>Hi xxxxxx! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><ul><li>以管理员身份运行cmd窗口（命令提示符）<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271117829.png" alt="电脑自带搜索栏搜索cmd窗口"></li></ul><p>然后转移到<code>blog</code>文件夹下使用下列命令进行安装hexo插件</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271124799.png" alt="利用cmd窗口安装hexo插件"></p><ul><li>在之前的<code>Git Bash Here</code>窗口还需要继续配置以下命令</li></ul><blockquote><p>git config –global user.name “xxx”&#x2F;&#x2F; 你的github用户名，非昵称<br>git config –global user.email  “<a href="mailto:xxx@qq.com">xxx@qq.com</a>“&#x2F;&#x2F; 填写你的github注册邮箱</p><p>如果出现以下代码：error: did you mean <code>--global</code> (with two dashes)?</p><p>则说明输入上面代码中第三个<code>--global</code>少输入了一个<code>-</code></p></blockquote></li><li><h5 id="准备上传代码"><a href="#准备上传代码" class="headerlink" title="准备上传代码"></a>准备上传代码</h5><ul><li>在Github上新建一个存储库，打开你的Github主页，点击右上上角的<code>+</code>号然后点击<code>New repository</code>：命名为<code>xxx.github.io</code>xxx为你的Github用户名或者自己取，无特殊要求<br><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271441826.png" alt="创建新的存储库"></li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271441556.png" alt="存储库命名"></p><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271508099.png" alt="SSH连接口令"></p><ul><li>编辑<code>blog</code>文件夹下的<code>_config.yml</code>文件（用记事本打开），拉倒最后一行添加如下代码。<br>PS：注意保持格式，缩进不对（空格个数），会导致上传不成功，<code>：</code>后面有一个空格，<code> repository</code>项为上面复制的代码。</li></ul><blockquote><p>deploy:<br>&nbsp;&nbsp;type: git<br>&nbsp;&nbsp;repository: <a href="mailto:&#x67;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;">&#x67;&#x69;&#116;&#64;&#103;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#109;</a>:xxxxx&#x2F;xxx.github.io.git<br>&nbsp;&nbsp;branch: main</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271612759.png" alt="修改hexo配置文件，并且连接到Github存储库"></p></li><li><h5 id="上传博客以及结果验证"><a href="#上传博客以及结果验证" class="headerlink" title="上传博客以及结果验证"></a>上传博客以及结果验证</h5><ul><li>输入以下代码上传博客</li></ul><blockquote><p>hexo d  &#x2F;&#x2F;既hexo deploy的缩写，用于部署网站<br>每次上传成功之后，需要等待1-3分钟，用来刷新页面</p></blockquote><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271618530.png" alt="上传成功截图"></p><ul><li>上传成功后，打开你的Github主页，点击右上角的头像进入你的存储库<code>Your repositories -&gt; xxx.github.io</code>：</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271729695.png" alt="查看你刚刚创建的存储库"></p><ul><li>在创建的存储库的设置中<code>pages</code><br>PS：④可能不会立马出现，需要等待1—3分钟，即可出现。</li></ul><p><img src="https://raw.githubusercontent.com/HuziSAMA/image/main/img/202307271728309.png" alt="配置并寻找博客地址"></p><ul><li>如果访问博客地址和本地预览的博客地址是一样的话就说明搭建成功！</li></ul></li></ol><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><ol><li><h5 id="hexo命令介绍"><a href="#hexo命令介绍" class="headerlink" title="hexo命令介绍"></a>hexo命令介绍</h5><pre class="line-numbers language-none"><code class="language-none">hexo new &quot;我的博客&quot; &#x2F;&#x2F;新建&quot;我的博客&quot;文章hexo new page &quot;pageName&quot; &#x2F;&#x2F;新建&quot;pagName&quot;页面hexo generate &#x2F;&#x2F;生成静态页面至public目录hexo server &#x2F;&#x2F;启动服务预览hexo deploy &#x2F;&#x2F;部署网站hexo server &#x2F;&#x2F;Hexo会监视文件变动并自动更新，无须重启服务器hexo server -s &#x2F;&#x2F;静态模式hexo server -p 5000 &#x2F;&#x2F;更改端口hexo server -i 192.168.1.1 &#x2F;&#x2F;自定义 IPhexo clean &#x2F;&#x2F;清除缓存，若是网页正常情况下可以忽略这条命令hexo version  &#x2F;&#x2F;查看Hexo的版本hexo s -g &#x2F;&#x2F;生成静态页并本地预览hexo d -g &#x2F;&#x2F;生成静态页并部署网站<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多指令以及其他帮助请访问hexo官网：<a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a></p></li><li><h5 id="hexo目录结构"><a href="#hexo目录结构" class="headerlink" title="hexo目录结构"></a>hexo目录结构</h5><blockquote><p> .deploy      &#x2F;&#x2F;hexo deploy生成的文件<br> node_modules  &#x2F;&#x2F;npm组件<br> public        &#x2F;&#x2F;生成的静态网页文件<br>scaffolds      &#x2F;&#x2F;模板<br> source        &#x2F;&#x2F;博客正文和其他源文件（主题不一样则内容不一样）<br> source_posts    &#x2F;&#x2F;用于存放我们自己写的文章文件后缀为：.md<br> themes        &#x2F;&#x2F;用于存放主题<br> _config.yml  &#x2F;&#x2F;全局配置文件<br> package.json  &#x2F;&#x2F;定义了hexo所需要的各种模块</p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
